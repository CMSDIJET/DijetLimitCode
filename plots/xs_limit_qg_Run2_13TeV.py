#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.06)
gStyle.SetPadBottomMargin(0.14)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
syst = False

mass_min = 1500
mass_max = 7000

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qg | tee stats_" + str(int(mass)) + "_qg.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

## for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qg.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [1.24407, 1.43991, 2.80482, 2.22809, 1.27515, 0.560954, 0.317459, 0.246387, 0.208495, 0.273716, 0.248925, 0.134884, 0.0908922, 0.0811643, 0.0801109, 0.0839884, 0.0930132, 0.0982708, 0.103811, 0.135774, 0.179312, 0.206696, 0.217067, 0.222239, 0.231193, 0.221653, 0.206551, 0.169509, 0.127484, 0.0855012, 0.0504299, 0.030467, 0.0212072, 0.020571, 0.017682, 0.0162158, 0.0153282, 0.0146442, 0.0146296, 0.0141128, 0.0140768, 0.014349, 0.0136725, 0.0144482, 0.014583, 0.0144691, 0.0141638, 0.0138575, 0.0132514, 0.013034, 0.0129332, 0.0125598, 0.0122754, 0.0120765, 0.0119497, 0.0118798])
xs_exp_limits = array('d', [1.31208, 1.03269, 0.851037, 0.788442, 0.70944, 0.582173, 0.550204, 0.448101, 0.386776, 0.314792, 0.28446, 0.261798, 0.225092, 0.215217, 0.188395, 0.162072, 0.148229, 0.133429, 0.119622, 0.107379, 0.0974243, 0.0813802, 0.0738884, 0.0629089, 0.0581561, 0.0509349, 0.0478898, 0.0434148, 0.0416169, 0.0399442, 0.0394089, 0.0354407, 0.0360944, 0.0309283, 0.0279071, 0.0262317, 0.0251983, 0.0239279, 0.0227477, 0.0214112, 0.0202536, 0.0195164, 0.0187627, 0.0170844, 0.0164198, 0.0153685, 0.0156691, 0.0146882, 0.0143957, 0.0143604, 0.013957, 0.0139629, 0.0137982, 0.0136551, 0.0134981, 0.0134838])

masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
xs_exp_limits_1sigma = array('d', [0.59232, 0.52942, 0.488264, 0.462864, 0.392938, 0.332092, 0.312414, 0.256745, 0.230318, 0.20369, 0.184979, 0.167727, 0.147418, 0.133233, 0.122577, 0.108161, 0.10292, 0.0921262, 0.0787565, 0.0749334, 0.064029, 0.0552765, 0.052816, 0.0426157, 0.0383475, 0.036015, 0.0341411, 0.0313201, 0.0282895, 0.027511, 0.0275167, 0.0253845, 0.0258476, 0.0222455, 0.0205371, 0.0194292, 0.0184851, 0.0173478, 0.0165825, 0.0158982, 0.0149467, 0.0145051, 0.0142051, 0.0134895, 0.012769, 0.0124473, 0.0123856, 0.0119565, 0.0118706, 0.0115188, 0.0112371, 0.0112082, 0.0111015, 0.0110598, 0.0110376, 0.0110588, 0.017458, 0.0178836, 0.0182784, 0.0183179, 0.0190859, 0.0196426, 0.0203256, 0.0196945, 0.0210301, 0.0219012, 0.0216353, 0.0228487, 0.0240851, 0.0272509, 0.0274209, 0.0291142, 0.0309656, 0.0329073, 0.0352245, 0.0373618, 0.0403914, 0.0429977, 0.0457863, 0.0547401, 0.0538409, 0.0600241, 0.0619818, 0.06257, 0.0681487, 0.0768392, 0.0815342, 0.0913661, 0.104609, 0.121954, 0.139154, 0.145959, 0.159429, 0.181089, 0.205804, 0.227345, 0.250666, 0.299016, 0.327615, 0.385972, 0.443302, 0.502192, 0.572285, 0.632659, 0.775559, 0.930303, 1.02283, 1.2112, 1.29679, 1.529, 2.12861, 3.03207])
xs_exp_limits_2sigma = array('d', [0.384565, 0.321428, 0.309737, 0.319823, 0.262014, 0.202361, 0.198652, 0.164767, 0.154321, 0.136652, 0.120532, 0.097524, 0.0977453, 0.0957218, 0.0829047, 0.0714794, 0.071911, 0.0599511, 0.0562747, 0.0545764, 0.0462714, 0.0402669, 0.0367562, 0.0316029, 0.0299011, 0.0288652, 0.027957, 0.0257832, 0.0233576, 0.0211579, 0.0216033, 0.0187728, 0.0197993, 0.0177299, 0.0173112, 0.0161249, 0.0152914, 0.0141333, 0.0135099, 0.0132842, 0.0125741, 0.0119672, 0.0116354, 0.0111986, 0.010628, 0.00991451, 0.0100513, 0.00961596, 0.0097969, 0.00977576, 0.00958716, 0.00957793, 0.00959474, 0.00962941, 0.00966624, 0.00973899, 0.0234052, 0.0243963, 0.0254069, 0.0253824, 0.0253319, 0.0258653, 0.0294067, 0.0286349, 0.0296244, 0.0319647, 0.0304166, 0.0326724, 0.0339788, 0.0359828, 0.03864, 0.041637, 0.0443745, 0.0477538, 0.0512514, 0.0536452, 0.0602876, 0.0666894, 0.0705465, 0.0759494, 0.075705, 0.0821781, 0.089033, 0.0877308, 0.105622, 0.101847, 0.117975, 0.13826, 0.151756, 0.170799, 0.209551, 0.200508, 0.218591, 0.266746, 0.276627, 0.344901, 0.365196, 0.436901, 0.500784, 0.554055, 0.640804, 0.708748, 0.854107, 0.902799, 1.15179, 1.3213, 1.45681, 1.77035, 2.00872, 2.46401, 3.64356, 4.82757])

if syst:
  masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [12.5406, 9.37948, 4.78078, 2.24239, 1.38317, 1.25686, 1.68168, 1.94743, 1.92662, 1.87468, 1.87853, 1.77258, 1.55049, 1.16436, 0.832195, 0.755232, 0.795726, 0.796131, 0.715206, 0.602903, 0.479742, 0.395314, 0.325895, 0.25961, 0.211346, 0.171212, 0.145859, 0.136918, 0.131901, 0.127337, 0.123564, 0.119239, 0.11822, 0.119847, 0.123728, 0.125759, 0.126204, 0.123843, 0.123354, 0.11945, 0.115794, 0.112136, 0.108037, 0.104277, 0.0984421, 0.0934844, 0.0910292, 0.0893694, 0.0882712, 0.0901911, 0.0901477, 0.0892953, 0.0896335, 0.0882758, 0.0884687, 0.0886266])
  xs_exp_limits = array('d', [6.963035, 5.234485, 4.78548, 4.11655, 3.46492, 2.882205, 2.543355, 2.031055, 1.757135, 1.48026, 1.322525, 1.10827, 0.954116, 0.872991, 0.7542415, 0.6370555, 0.5723285, 0.5029675, 0.434956, 0.4068035, 0.3650865, 0.3335655, 0.3109965, 0.285384, 0.2527855, 0.24022, 0.222743, 0.2072525, 0.193565, 0.1746095, 0.1628835, 0.152846, 0.147671, 0.1341245, 0.128476, 0.116897, 0.1136705, 0.1087305, 0.104016, 0.1010055, 0.09851205, 0.09298415, 0.0917058, 0.0892046, 0.0866179, 0.08511395, 0.0851613, 0.0854817, 0.08412835, 0.0816732, 0.0820425, 0.0816572, 0.08192905, 0.0820458, 0.08251655, 0.08316625])

  masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
  xs_exp_limits_1sigma = array('d', [4.41521872, 3.34997856, 3.153476, 2.85982306, 2.30974134, 1.98304072, 1.76108046, 1.47938257, 1.26227963, 1.08228697, 0.918531623, 0.765920424, 0.671383851, 0.625784776, 0.543506784, 0.473359671, 0.398271656, 0.34420481, 0.305610072, 0.287604445, 0.258793604, 0.234464566, 0.219367901, 0.200701142, 0.179693317, 0.168155825, 0.159583045, 0.151163455, 0.136102402, 0.126318156, 0.118425414, 0.113404087, 0.104766554, 0.0974041656, 0.0940704762, 0.0874012326, 0.0844885643, 0.0809728032, 0.0778623058, 0.0759177922, 0.0734630469, 0.0720701918, 0.0714762976, 0.071018887, 0.0699138219, 0.0690921298, 0.0696895521, 0.06982257, 0.0703103692, 0.0695457852, 0.0696600819, 0.0700147422, 0.0707519541, 0.0709903092, 0.0714630192, 0.0721067191, 0.105980172, 0.105979758, 0.106495611, 0.106722331, 0.107484059, 0.107671371, 0.108741561, 0.112616833, 0.11417623, 0.112808427, 0.114455406, 0.117428356, 0.121204829, 0.124207868, 0.13210677, 0.133429954, 0.139072894, 0.144943751, 0.149786979, 0.164834893, 0.176435751, 0.183709374, 0.185014497, 0.214090612, 0.2220996, 0.248182963, 0.262505884, 0.266286403, 0.291202388, 0.326129562, 0.353384391, 0.375483453, 0.407684418, 0.456372265, 0.483940259, 0.543487298, 0.592689603, 0.655734018, 0.734757863, 0.861773408, 0.9521058, 1.07614018, 1.30008208, 1.3459187, 1.60479724, 1.89402692, 2.19038447, 2.4862026, 2.89174955, 3.52731503, 4.13196247, 4.90246612, 5.80826071, 7.31623088, 8.62495625, 10.8463048])
  xs_exp_limits_2sigma = array('d', [2.90068994, 2.28275564, 2.03220712, 1.88152926, 1.61893262, 1.35154006, 1.21347533, 1.01434105, 0.902352217, 0.791546147, 0.654609871, 0.541623072, 0.492864471, 0.45105998, 0.385724049, 0.333012892, 0.299471736, 0.25538752, 0.22515682, 0.226551963, 0.203591531, 0.185013253, 0.167806838, 0.15128452, 0.143291524, 0.127438203, 0.117251831, 0.116359052, 0.104627213, 0.0976092146, 0.0924117426, 0.0935727759, 0.0818633871, 0.0802516444, 0.075342847, 0.0741230334, 0.070767002, 0.0685709129, 0.0673008515, 0.0664932689, 0.065165853, 0.0642240557, 0.063671489, 0.0638156749, 0.0626004975, 0.0628691162, 0.0630590288, 0.0636775196, 0.0644851942, 0.0637879034, 0.0643921693, 0.0646117768, 0.0652627149, 0.0659751825, 0.066581865, 0.0666458627, 0.144454073, 0.144987438, 0.145199083, 0.144713104, 0.145472647, 0.147306701, 0.147796235, 0.158727872, 0.162286226, 0.161053252, 0.159868155, 0.162629355, 0.16843003, 0.174010872, 0.181047761, 0.185548455, 0.195006536, 0.195192071, 0.213562225, 0.232378007, 0.239240646, 0.254260537, 0.2751245, 0.310443327, 0.337984172, 0.342413676, 0.358012282, 0.380017741, 0.415926141, 0.463943854, 0.490734524, 0.525750903, 0.589853232, 0.577013696, 0.662321457, 0.728563075, 0.830453497, 0.940028328, 0.993195324, 1.16398116, 1.34622095, 1.57567193, 1.83757353, 1.99649013, 2.32993753, 2.44602028, 2.89175256, 3.32127966, 4.06694862, 4.83784207, 5.47469605, 6.82813398, 8.85533934, 10.9925696, 12.8711354, 16.7497694])

##
########################################################

massesString = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0,9100.,9200.,9300.,9400.,9500.,9600.,9700.,9800.,9900.,10000.])
xsString = array('d', [8316.184311558545,5312.93137758767,3435.0309937336524,2304.4139502741305,1569.8115447896687,1090.9516635659693,770.901859690924,551.9206062572061,399.69535383507633,293.77957451762086,218.15126842827823,162.87634729465125,123.17685479653694,93.63530805932386,71.53697229809124,55.37491301647483,42.75271508357369,33.36378355470234,26.06619302090876,20.311817606835643,16.1180931789545,12.768644973921226,10.142660425967444,8.057990848043234,6.400465846290908,5.115134438331436,4.132099789492928,3.3193854239538734,2.6581204529344302,2.157554604919995,1.7505176068913348,1.4049155245498584,1.140055677916783,0.9253251132104159,0.7522038169131606,0.6119747371392215,0.49612321727328523,0.40492020959456737,0.33091999402250655,0.27017917021492555,0.2201693919322846,0.17830700070267996,0.14564253802358157,0.11940534430331146,0.09694948234356839,0.0793065371847468,0.06446186373361917,0.05282660618352478,
                       0.0428516302310620888,0.0348997638039910363,0.0283334766442618227,0.0231416918363592127,0.0187417921340763783,0.0153501307395115115,0.0124396534127133717,0.0100542205744949455,0.0081744954858627415,0.0066338099362915941,0.0053365711503318145,0.00430912459914657443,0.00346381039244064343,0.00278602671711227174,0.00225154342228859257,0.0018082930150063248,0.00143929440338502119,0.0011581373956044489,0.00091869589873893118,0.00073410823691329855,0.00058669382997948734,0.0004661568745858897,0.000368716655469570365,0.000293168485206959169,0.000230224535021638668,0.000182317101888465142,0.000143263359883433282,0.000112630538527214965,0.000088189175598406759,0.000068708474367442343,0.000053931726669273556,0.0000416417855733682702,0.0000326529676755488658,0.0000254365480426201587,0.0000198410151166864761,0.0000154034425617473576,0.0000119095554601641413,9.2537574320108232e-6,7.2155417437856749e-6,5.6130924422251982e-6,4.36634755605624901e-6,3.39717456406994868e-6,2.6766018046173896e-6])

massesQstar = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])
xsQstar = array('d', [0.4101E+03,0.2620E+03,0.1721E+03,0.1157E+03,0.7934E+02,0.5540E+02,0.3928E+02,0.2823E+02,0.2054E+02,0.1510E+02,0.1121E+02,0.8390E+01,0.6328E+01,0.4807E+01,0.3674E+01,0.2824E+01,0.2182E+01,0.1694E+01,0.1320E+01,0.1033E+01,0.8116E+00,0.6395E+00,0.5054E+00,0.4006E+00,0.3182E+00,0.2534E+00,0.2022E+00,0.1616E+00,0.1294E+00,0.1038E+00,0.8333E-01,0.6700E-01,0.5392E-01,0.4344E-01,0.3503E-01,0.2827E-01,0.2283E-01,0.1844E-01,0.1490E-01,0.1205E-01,0.9743E-02,0.7880E-02,0.6373E-02,0.5155E-02,0.4169E-02,0.3371E-02,0.2725E-02,0.2202E-02,0.1779E-02,0.1437E-02,0.1159E-02,0.9353E-03,0.7541E-03,0.6076E-03,0.4891E-03,0.3935E-03,0.3164E-03,0.2541E-03,0.2039E-03,0.1635E-03,0.1310E-03,0.1049E-03,0.8385E-04,0.6699E-04,0.5347E-04,0.4264E-04,0.3397E-04,0.2704E-04,0.2151E-04,0.1709E-04,0.1357E-04,0.1077E-04,0.8544E-05,0.6773E-05,0.5367E-05,0.4251E-05,0.3367E-05,0.2666E-05,0.2112E-05,0.1673E-05,0.1326E-05])

xs_max = 2.8e+01
idx = 0

for i, xs in enumerate(xsString):
  if xs < xs_max:
    idx = i
    break

graph_xsString = TGraph(len(massesString[idx:-1]),massesString[idx:-1],xsString[idx:-1])
graph_xsString.SetLineWidth(3)
graph_xsString.SetLineStyle(8)
graph_xsString.SetLineColor(9)

for i, xs in enumerate(xsQstar):
  if xs < xs_max:
    idx = i
    break

graph_xsQstar = TGraph(len(massesQstar[idx:-1]),massesQstar[idx:-1],xsQstar[idx:-1])
graph_xsQstar.SetLineWidth(3)
graph_xsQstar.SetLineStyle(2)
graph_xsQstar.SetLineColor(1)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qg resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(5e-03,1e+02)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsQstar.Draw("L")
graph_xsString.Draw("L")

legend = TLegend(.55,.50,.90,.70)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.035)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legendTh = TLegend(.55,.78,.90,.86)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.035)
legendTh.AddEntry(graph_xsString,"String","l")
legendTh.AddEntry(graph_xsQstar,"Excited quark","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

# draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "547 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
if( iPos==0 ): CMS_lumi.relPosX = 0.15
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_547_invpb.eps')
