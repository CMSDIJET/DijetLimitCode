#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
#syst = False

mass_min = 1300
mass_max = 7000

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qg | tee stats_" + str(int(mass)) + "_qg.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

## for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qg.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [13.4831, 8.69886, 12.7585, 7.44248, 2.87499, 1.93393, 1.39893, 0.99834, 0.969378, 1.1099, 1.11847, 0.984892, 1.09796, 1.42846, 1.6665, 1.4295, 0.980145, 0.871941, 0.965759, 1.01556, 0.929258, 0.748125, 0.57023, 0.445021, 0.348936, 0.262179, 0.231307, 0.224717, 0.213801, 0.204395, 0.197431, 0.188848, 0.180258, 0.169973, 0.159263, 0.152571, 0.154489, 0.158341, 0.160313, 0.161363, 0.161058, 0.15922, 0.156569, 0.153429, 0.149793, 0.145711, 0.141712, 0.137999, 0.13643, 0.135355, 0.13433, 0.133518, 0.132979, 0.132584, 0.132055, 0.131682, 0.13196, 0.132387])
xs_exp_limits = array('d', [7.55374, 5.85882, 4.39145, 4.13483, 3.60138, 3.14953, 2.57061, 2.3519, 1.98301, 1.69799, 1.52347, 1.38177, 1.12345, 0.977257, 0.88675, 0.802435, 0.707324, 0.641945, 0.571419, 0.481199, 0.454, 0.425648, 0.397049, 0.375953, 0.326899, 0.338552, 0.30487, 0.283821, 0.254419, 0.241231, 0.218951, 0.211112, 0.1966, 0.182259, 0.182692, 0.17824, 0.16239, 0.151944, 0.141037, 0.135887, 0.129752, 0.126111, 0.124963, 0.121779, 0.122325, 0.120018, 0.120407, 0.118186, 0.118825, 0.119811, 0.118975, 0.119866, 0.120555, 0.120537, 0.12143, 0.122247, 0.123113, 0.123825])

masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma = array('d', [3.84324, 3.25252, 2.5812, 2.3338, 2.05418, 1.91472, 1.6592, 1.47834, 1.32766, 1.1497, 0.974479, 0.896787, 0.828433, 0.715141, 0.580204, 0.498901, 0.464286, 0.434079, 0.412065, 0.365944, 0.323942, 0.299359, 0.27022, 0.257679, 0.231823, 0.224968, 0.2188, 0.203022, 0.182797, 0.176945, 0.16137, 0.15131, 0.143345, 0.140109, 0.139655, 0.131283, 0.124045, 0.11725, 0.115201, 0.110065, 0.107147, 0.105668, 0.10464, 0.103665, 0.103035, 0.101183, 0.101106, 0.100676, 0.0998266, 0.100787, 0.101583, 0.102907, 0.104586, 0.104683, 0.105077, 0.107558, 0.108765, 0.109456, 0.149982, 0.151433, 0.150144, 0.138919, 0.143433, 0.144893, 0.136715, 0.141813, 0.148498, 0.150499, 0.149301, 0.151105, 0.15373, 0.1594, 0.160152, 0.160837, 0.165306, 0.17407, 0.190158, 0.201036, 0.205329, 0.224603, 0.24406, 0.244719, 0.254767, 0.26328, 0.294852, 0.304474, 0.348285, 0.378383, 0.432665, 0.45167, 0.49212, 0.48177, 0.544363, 0.556777, 0.618523, 0.725836, 0.714445, 0.874179, 1.00856, 1.11528, 1.25102, 1.43041, 1.63376, 1.84833, 2.15978, 2.25931, 2.76479, 3.15203, 3.7595, 4.25842, 5.06202, 5.9092, 7.61148, 8.99699, 10.8677, 15.9512])
xs_exp_limits_2sigma = array('d', [2.5861, 1.96223, 1.54973, 1.40187, 1.35568, 1.25583, 1.0997, 1.00663, 0.926741, 0.772834, 0.676154, 0.60201, 0.576941, 0.483511, 0.392838, 0.363408, 0.345638, 0.315192, 0.280684, 0.280009, 0.259086, 0.244117, 0.233234, 0.208752, 0.197212, 0.185995, 0.168645, 0.165162, 0.155807, 0.14159, 0.134051, 0.127341, 0.121433, 0.115961, 0.116179, 0.10924, 0.106067, 0.100897, 0.0986193, 0.0976627, 0.0983662, 0.0982361, 0.0972669, 0.0955899, 0.0935028, 0.0934265, 0.0937928, 0.0935008, 0.0930513, 0.0946691, 0.0952795, 0.0963735, 0.0971387, 0.0983684, 0.0985862, 0.0994892, 0.100169, 0.100316, 0.206174, 0.21747, 0.206302, 0.201252, 0.198843, 0.190918, 0.180969, 0.184151, 0.201947, 0.201462, 0.197563, 0.20469, 0.215154, 0.221177, 0.237142, 0.230267, 0.247082, 0.25713, 0.25547, 0.262651, 0.274848, 0.315091, 0.325673, 0.341734, 0.359198, 0.360211, 0.415574, 0.423427, 0.471387, 0.538351, 0.567413, 0.654108, 0.682073, 0.693444, 0.803117, 0.869228, 0.900222, 1.04703, 1.09595, 1.26256, 1.41853, 1.72702, 1.80758, 2.06525, 2.47592, 2.56418, 2.99277, 3.89106, 3.97222, 4.57355, 5.66024, 6.4379, 7.8131, 9.9059, 11.6648, 14.5917, 17.331, 22.8436])

if syst:
  masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [30.0837, 17.3312, 16.2013, 12.6827, 6.63927, 4.09172, 2.81754, 2.0801, 1.81432, 1.73606, 1.65535, 1.57397, 1.61795, 1.7229, 1.83735, 1.72639, 1.47083, 1.25776, 1.14978, 1.1122, 1.04584, 0.958034, 0.848282, 0.734786, 0.598486, 0.452036, 0.364983, 0.296993, 0.254484, 0.227288, 0.211742, 0.199772, 0.187461, 0.179778, 0.169754, 0.164864, 0.162421, 0.161903, 0.163566, 0.164676, 0.160845, 0.160713, 0.160136, 0.158488, 0.15671, 0.154409, 0.150531, 0.147364, 0.146792, 0.144107, 0.141662, 0.140163, 0.139234, 0.140407, 0.138848, 0.138441, 0.1369, 0.138308])
  xs_exp_limits = array('d', [19.3328, 12.7885, 9.65113, 7.59381, 6.93144, 5.626215, 4.84418, 3.901455, 3.362215, 2.95194, 2.484255, 2.08993, 1.76917, 1.57646, 1.26701, 1.149675, 1.02275, 0.925868, 0.776254, 0.674289, 0.6048925, 0.544958, 0.4958745, 0.4595, 0.413392, 0.403484, 0.366213, 0.3271745, 0.298883, 0.2756685, 0.268623, 0.244686, 0.228441, 0.222952, 0.204546, 0.1895015, 0.187344, 0.1689065, 0.160993, 0.149828, 0.147528, 0.1405295, 0.1386355, 0.133901, 0.123478, 0.1207285, 0.124024, 0.116179, 0.1169, 0.1196765, 0.119367, 0.118351, 0.1205315, 0.121376, 0.1220835, 0.120602, 0.1211315, 0.122813])

  masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma = array('d', [10.5007096, 7.79260136, 5.96123296, 5.00005506, 4.49535792, 3.84517793, 3.3478224, 2.79174185, 2.51561582, 2.04902444, 1.80086614, 1.51725632, 1.24552734, 1.09474138, 0.899664784, 0.749981276, 0.699123345, 0.620846294, 0.547378496, 0.476803564, 0.414686883, 0.395782915, 0.364937888, 0.32625656, 0.300761463, 0.283311844, 0.265681762, 0.239363637, 0.220394461, 0.2057264, 0.195207952, 0.179982802, 0.168659498, 0.161061876, 0.147993862, 0.137667387, 0.13594381, 0.121449178, 0.116543106, 0.110907641, 0.108647792, 0.106636076, 0.104716351, 0.102956664, 0.101688962, 0.100482759, 0.100417974, 0.098267001, 0.0989844456, 0.100410168, 0.101268622, 0.101403895, 0.103279454, 0.103896851, 0.104497528, 0.104960228, 0.10513941, 0.106097491, 0.151062638, 0.14997081, 0.15082055, 0.153285996, 0.156026149, 0.156747718, 0.155218133, 0.159892202, 0.164993987, 0.15942841, 0.159920854, 0.165754448, 0.164849651, 0.170132716, 0.185217824, 0.189009467, 0.191741173, 0.205682106, 0.209544827, 0.227088348, 0.241224449, 0.263894384, 0.268252509, 0.293049014, 0.313973674, 0.324495873, 0.3458939, 0.364648089, 0.403173409, 0.447797521, 0.479367017, 0.530273884, 0.592995842, 0.614181132, 0.658399533, 0.690986242, 0.790994153, 0.875408456, 0.948028512, 1.11536454, 1.34901426, 1.59067975, 1.64210567, 1.94582116, 2.29434905, 2.6374903, 2.97944162, 3.62340837, 4.0807431, 4.64067092, 5.26811057, 6.74150166, 7.94481094, 9.89277638, 11.2452676, 15.0133342, 20.526136, 32.3610718])
  xs_exp_limits_2sigma = array('d', [6.74752452, 4.97002656, 3.90904374, 3.49852894, 2.97289268, 2.70689555, 2.38564868, 2.0628655, 1.86171913, 1.55381608, 1.34390587, 1.10209072, 0.96086625, 0.798588656, 0.702461788, 0.560825861, 0.510916762, 0.452888326, 0.410648336, 0.359548808, 0.325232058, 0.293598634, 0.285297968, 0.259686306, 0.24495616, 0.22314358, 0.208797802, 0.189623005, 0.172072722, 0.15963957, 0.154300458, 0.143761286, 0.133324872, 0.129748336, 0.119280542, 0.111910859, 0.110299572, 0.102284207, 0.1004470762, 0.0974397601, 0.097757726, 0.0968570308, 0.0949466644, 0.0943822106, 0.0931407104, 0.093215416, 0.0933035512, 0.0913552142, 0.0917603492, 0.093587236, 0.0938229165, 0.0944791462, 0.0964147143, 0.0975046539, 0.0985002088, 0.0991315092, 0.0998108075, 0.100241508, 0.209838331, 0.217890917, 0.20661703, 0.210984431, 0.211763599, 0.203566732, 0.209822768, 0.217649781, 0.227127853, 0.221117684, 0.231085314, 0.23764714, 0.221960517, 0.234315396, 0.246196318, 0.249748466, 0.250563804, 0.268328602, 0.272346525, 0.303359025, 0.331423357, 0.354675654, 0.393334319, 0.424316678, 0.41519369, 0.420730684, 0.449736712, 0.524259448, 0.591157813, 0.625816842, 0.673841305, 0.728004492, 0.790333776, 0.878070764, 0.875654129, 0.984973083, 0.998941809, 1.23971732, 1.3889384, 1.52014802, 1.96088176, 2.15733256, 2.34277112, 2.928995, 3.26439276, 3.69298585, 4.21098369, 4.83332575, 5.6600288, 6.30912642, 7.15359753, 9.57380806, 10.8975671, 13.3748468, 16.554136, 21.8483578, 32.4435964, 48.4352676])

##
########################################################


massesString = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0,9100.,9200.,9300.,9400.,9500.,9600.,9700.,9800.,9900.,10000.])
xsString = array('d', [8316.184311558545,5312.93137758767,3435.0309937336524,2304.4139502741305,1569.8115447896687,1090.9516635659693,770.901859690924,551.9206062572061,399.69535383507633,293.77957451762086,218.15126842827823,162.87634729465125,123.17685479653694,93.63530805932386,71.53697229809124,55.37491301647483,42.75271508357369,33.36378355470234,26.06619302090876,20.311817606835643,16.1180931789545,12.768644973921226,10.142660425967444,8.057990848043234,6.400465846290908,5.115134438331436,4.132099789492928,3.3193854239538734,2.6581204529344302,2.157554604919995,1.7505176068913348,1.4049155245498584,1.140055677916783,0.9253251132104159,0.7522038169131606,0.6119747371392215,0.49612321727328523,0.40492020959456737,0.33091999402250655,0.27017917021492555,0.2201693919322846,0.17830700070267996,0.14564253802358157,0.11940534430331146,0.09694948234356839,0.0793065371847468,0.06446186373361917,0.05282660618352478,
                       0.0428516302310620888,0.0348997638039910363,0.0283334766442618227,0.0231416918363592127,0.0187417921340763783,0.0153501307395115115,0.0124396534127133717,0.0100542205744949455,0.0081744954858627415,0.0066338099362915941,0.0053365711503318145,0.00430912459914657443,0.00346381039244064343,0.00278602671711227174,0.00225154342228859257,0.0018082930150063248,0.00143929440338502119,0.0011581373956044489,0.00091869589873893118,0.00073410823691329855,0.00058669382997948734,0.0004661568745858897,0.000368716655469570365,0.000293168485206959169,0.000230224535021638668,0.000182317101888465142,0.000143263359883433282,0.000112630538527214965,0.000088189175598406759,0.000068708474367442343,0.000053931726669273556,0.0000416417855733682702,0.0000326529676755488658,0.0000254365480426201587,0.0000198410151166864761,0.0000154034425617473576,0.0000119095554601641413,9.2537574320108232e-6,7.2155417437856749e-6,5.6130924422251982e-6,4.36634755605624901e-6,3.39717456406994868e-6,2.6766018046173896e-6])

massesQstar = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])
xsQstar = array('d', [0.4101E+03,0.2620E+03,0.1721E+03,0.1157E+03,0.7934E+02,0.5540E+02,0.3928E+02,0.2823E+02,0.2054E+02,0.1510E+02,0.1121E+02,0.8390E+01,0.6328E+01,0.4807E+01,0.3674E+01,0.2824E+01,0.2182E+01,0.1694E+01,0.1320E+01,0.1033E+01,0.8116E+00,0.6395E+00,0.5054E+00,0.4006E+00,0.3182E+00,0.2534E+00,0.2022E+00,0.1616E+00,0.1294E+00,0.1038E+00,0.8333E-01,0.6700E-01,0.5392E-01,0.4344E-01,0.3503E-01,0.2827E-01,0.2283E-01,0.1844E-01,0.1490E-01,0.1205E-01,0.9743E-02,0.7880E-02,0.6373E-02,0.5155E-02,0.4169E-02,0.3371E-02,0.2725E-02,0.2202E-02,0.1779E-02,0.1437E-02,0.1159E-02,0.9353E-03,0.7541E-03,0.6076E-03,0.4891E-03,0.3935E-03,0.3164E-03,0.2541E-03,0.2039E-03,0.1635E-03,0.1310E-03,0.1049E-03,0.8385E-04,0.6699E-04,0.5347E-04,0.4264E-04,0.3397E-04,0.2704E-04,0.2151E-04,0.1709E-04,0.1357E-04,0.1077E-04,0.8544E-05,0.6773E-05,0.5367E-05,0.4251E-05,0.3367E-05,0.2666E-05,0.2112E-05,0.1673E-05,0.1326E-05])

graph_xsString = TGraph(len(massesString),massesString,xsString)
graph_xsString.SetLineWidth(3)
graph_xsString.SetLineStyle(8)
graph_xsString.SetLineColor(9)

graph_xsQstar = TGraph(len(massesQstar),massesQstar,xsQstar)
graph_xsQstar.SetLineWidth(3)
graph_xsQstar.SetLineStyle(2)
graph_xsQstar.SetLineColor(1)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qg resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-02,1e+03)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsQstar.Draw("L")
graph_xsString.Draw("L")

legend = TLegend(.60,.55,.90,.70)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legendTh = TLegend(.60,.80,.90,.88)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.03)
legendTh.AddEntry(graph_xsString,"String","l")
legendTh.AddEntry(graph_xsQstar,"Excited quark","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

# draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "41.8 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_41p8_invpb.eps')
