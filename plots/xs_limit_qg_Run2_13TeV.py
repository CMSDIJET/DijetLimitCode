#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
#syst = False

mass_min = 1300
mass_max = 7000

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qg | tee stats_" + str(int(mass)) + "_qg.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

## for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qg.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [10.3751, 13.8264, 6.55349, 2.44435, 2.22862, 1.24374, 0.947578, 1.12949, 1.41524, 1.28891, 1.25175, 1.45199, 1.61689, 1.35701, 1.0093, 0.995174, 1.01626, 0.943728, 0.76496, 0.567827, 0.418643, 0.338593, 0.251817, 0.231712, 0.219958, 0.207757, 0.198495, 0.192832, 0.183754, 0.17555, 0.163001, 0.151375, 0.151426, 0.157052, 0.16044, 0.161611, 0.160995, 0.15858, 0.155725, 0.152297, 0.148288, 0.143719, 0.139386, 0.135483, 0.131857, 0.128721, 0.126059, 0.124646, 0.123311, 0.122246, 0.121551, 0.121306, 0.121166, 0.127818, 0.128382, 0.128993, 0.129531, 0.130074])
xs_exp_limits = array('d', [6.672545, 5.123715, 4.34233, 3.583315, 3.26023, 2.691545, 2.1238, 1.891625, 1.599015, 1.378815, 1.24918, 1.12243, 0.9088285, 0.806554, 0.746514, 0.660373, 0.5789305, 0.520127, 0.475583, 0.413365, 0.3943755, 0.3640775, 0.352227, 0.3290775, 0.286291, 0.265696, 0.24863, 0.221159, 0.214747, 0.203102, 0.196243, 0.185486, 0.1788865, 0.156613, 0.147346, 0.1417965, 0.136371, 0.133413, 0.1281915, 0.1244095, 0.1235155, 0.121296, 0.1205845, 0.1200365, 0.11643, 0.114805, 0.1155355, 0.1145285, 0.1149285, 0.1134665, 0.114351, 0.1165905, 0.117413, 0.115888, 0.116645, 0.1173625, 0.118092, 0.1191065])

masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma = array('d', [3.57541214, 2.75105104, 2.29538027, 2.00102833, 1.88312514, 1.662907, 1.33121194, 1.15515082, 1.06348415, 0.91194727, 0.855820332, 0.706748247, 0.613020126, 0.528591381, 0.496077679, 0.454008859, 0.40223775, 0.372434665, 0.331579858, 0.29851492, 0.269651312, 0.255929094, 0.257635561, 0.235542864, 0.208769033, 0.198834399, 0.188064336, 0.167702487, 0.161172412, 0.151269597, 0.144775594, 0.132839597, 0.129569572, 0.124576603, 0.120840531, 0.118191454, 0.113953441, 0.109920932, 0.108222317, 0.106157609, 0.105776615, 0.104535715, 0.103129492, 0.102021629, 0.100460212, 0.0998701958, 0.0995445903, 0.0992527871, 0.101064696, 0.100534733, 0.100906578, 0.102154131, 0.103158423, 0.103018671, 0.103714497, 0.104444199, 0.105046529, 0.105742522, 0.135192632, 0.135152222, 0.134583675, 0.134616636, 0.134654478, 0.141815759, 0.138180606, 0.137384924, 0.134265111, 0.14221486, 0.135164204, 0.140358874, 0.140097292, 0.144307652, 0.154790468, 0.149485513, 0.152269277, 0.155165664, 0.157413698, 0.16807447, 0.174506343, 0.182836652, 0.18964475, 0.206764366, 0.221088298, 0.241981166, 0.253501459, 0.26302266, 0.277886063, 0.301698413, 0.326444366, 0.350141273, 0.393853019, 0.422541888, 0.45845024, 0.514131155, 0.548624096, 0.572689902, 0.646396078, 0.695152858, 0.788720021, 0.891463303, 1.07256505, 1.16384339, 1.25974109, 1.41996132, 1.72202867, 1.95999129, 2.07008621, 2.54248563, 2.97454715, 3.59037825, 4.43032495, 5.38210539, 6.32822518, 7.68735752, 10.3392636, 13.4445998])
xs_exp_limits_2sigma = array('d', [2.0746184, 1.68167124, 1.46771053, 1.24248231, 1.20399422, 1.03645829, 0.947152469, 0.760175249, 0.743763199, 0.667165392, 0.570373813, 0.515329597, 0.440236667, 0.409773601, 0.370740477, 0.329157219, 0.300104144, 0.285525918, 0.265827349, 0.240503589, 0.224201179, 0.217921095, 0.203319384, 0.186693757, 0.174982297, 0.155584065, 0.147460446, 0.139863485, 0.133508681, 0.125866083, 0.122416868, 0.117035307, 0.110237668, 0.109187353, 0.106085325, 0.100570221, 0.101242153, 0.0982141373, 0.0997174924, 0.0974227125, 0.0958468601, 0.0970463765, 0.0966708056, 0.0957347154, 0.0950995834, 0.0946534154, 0.0941661384, 0.0933036897, 0.0940021452, 0.0950944475, 0.0958874231, 0.0963279112, 0.0969754418, 0.0981673946, 0.0987656113, 0.0994533235, 0.0992259964, 0.0997963567, 0.18347498, 0.18308899, 0.183061698, 0.182646429, 0.182146755, 0.197865321, 0.190862452, 0.191261652, 0.180876451, 0.185846436, 0.181950491, 0.18975952, 0.189924191, 0.193568499, 0.208711211, 0.207020933, 0.208036018, 0.212395384, 0.228668546, 0.235702383, 0.243628296, 0.243867298, 0.261110067, 0.293001513, 0.285127132, 0.327585039, 0.375012658, 0.381964231, 0.379003856, 0.394209259, 0.470650231, 0.500748843, 0.529349319, 0.601292401, 0.619421921, 0.723309774, 0.78195362, 0.893403378, 0.890440161, 0.937760767, 1.02242725, 1.24292039, 1.47983305, 1.73977454, 1.93173288, 2.01730643, 2.51542254, 2.79738177, 3.09465342, 3.59933027, 4.60434339, 5.37890955, 6.73319075, 8.78141698, 10.3046032, 12.397594, 15.4462268, 22.4974575])

if syst:
  masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [21.5467, 19.4443, 13.9651, 5.64433, 4.21498, 2.62887, 1.99384, 2.05658, 2.02319, 1.92938, 1.82981, 1.81885, 1.82763, 1.71325, 1.48047, 1.30744, 1.16305, 1.08868, 0.966329, 0.839295, 0.702483, 0.556467, 0.406964, 0.324904, 0.274241, 0.235227, 0.215299, 0.202827, 0.192051, 0.184307, 0.173092, 0.163129, 0.161657, 0.162681, 0.163073, 0.16266, 0.16058, 0.15762, 0.157977, 0.156501, 0.153534, 0.150511, 0.147414, 0.143951, 0.139558, 0.135926, 0.133416, 0.129062, 0.128845, 0.125138, 0.12743, 0.124658, 0.124679, 0.12957, 0.128295, 0.131978, 0.130951, 0.13251])
  xs_exp_limits = array('d', [16.45385, 10.3911, 8.18725, 6.62469, 5.63671, 4.779185, 3.88036, 3.31879, 2.81761, 2.30023, 1.95999, 1.678195, 1.359495, 1.20333, 1.084315, 0.9283745, 0.769115, 0.691393, 0.627997, 0.5559335, 0.479187, 0.451661, 0.4314705, 0.3834885, 0.3574035, 0.327283, 0.292556, 0.2590355, 0.241763, 0.22954, 0.21139, 0.2070745, 0.193483, 0.1724265, 0.1641965, 0.151363, 0.1425065, 0.1397945, 0.133101, 0.12678, 0.1263265, 0.123092, 0.1208935, 0.1172835, 0.115057, 0.113609, 0.1119325, 0.1119955, 0.114325, 0.112124, 0.1144905, 0.1134145, 0.1140875, 0.1125075, 0.112975, 0.114093, 0.1147735, 0.115405])

  masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma = array('d', [8.96244909, 6.1057576, 4.99998062, 4.54671713, 3.88596896, 3.4616747, 2.68412486, 2.31272878, 2.00913116, 1.72263895, 1.40252747, 1.19744131, 0.939817866, 0.815356118, 0.745302177, 0.649768629, 0.560103264, 0.476037558, 0.450156944, 0.390324871, 0.355472049, 0.329539187, 0.312604816, 0.286399541, 0.252205499, 0.232687072, 0.214234548, 0.193791531, 0.180103535, 0.168979986, 0.157822358, 0.150639679, 0.146080753, 0.129760988, 0.121677057, 0.114400926, 0.110300765, 0.107806765, 0.10583241, 0.103484432, 0.102757653, 0.102325665, 0.101682777, 0.100526517, 0.0995502747, 0.099558032, 0.0984686988, 0.0985523829, 0.0996342502, 0.0995726887, 0.100591435, 0.10230933, 0.102135144, 0.101033081, 0.102030148, 0.102889615, 0.103554963, 0.104150839, 0.139926611, 0.139456672, 0.139074282, 0.139346242, 0.139544708, 0.145348372, 0.144955029, 0.147377806, 0.139004282, 0.148622572, 0.145845879, 0.146540937, 0.146877327, 0.151798484, 0.161976414, 0.158362538, 0.162607376, 0.169524072, 0.168629458, 0.181586365, 0.188122935, 0.199754657, 0.209309893, 0.222824253, 0.244167563, 0.254846608, 0.281249757, 0.290708404, 0.320869923, 0.337629436, 0.374276041, 0.408647084, 0.463478954, 0.50926714, 0.562361074, 0.632396972, 0.643860668, 0.714770713, 0.790463945, 0.878849232, 0.980089834, 1.16093168, 1.34796365, 1.52360105, 1.69006612, 2.01067573, 2.42542483, 2.78041288, 3.16309058, 3.9209354, 4.58006794, 5.50980722, 6.68518302, 8.16604645, 9.74552681, 12.782076, 16.1860092, 27.4427172])
  xs_exp_limits_2sigma = array('d', [5.60767443, 4.07156368, 3.61325154, 2.99742445, 2.95070281, 2.32170432, 1.94822748, 1.6115649, 1.59348588, 1.28821798, 1.09936845, 0.910220187, 0.713113562, 0.610745468, 0.549793632, 0.483002542, 0.41938748, 0.379990696, 0.335101968, 0.300363636, 0.274863281, 0.253550486, 0.247384613, 0.227376713, 0.200273315, 0.185738856, 0.172294226, 0.155671, 0.147314073, 0.139435142, 0.125216777, 0.11968784, 0.114738462, 0.109999185, 0.106057121, 0.102584878, 0.098262818, 0.0962263805, 0.0948534613, 0.0953640358, 0.0956665479, 0.0950564629, 0.095202854, 0.0942716715, 0.0931202728, 0.0933005635, 0.0927847693, 0.0932497247, 0.0929120774, 0.0936248303, 0.0946595442, 0.0958234474, 0.0958222619, 0.0972989248, 0.0975184972, 0.0984209317, 0.0994674635, 0.0995980549, 0.19251786, 0.191782318, 0.191449422, 0.191081734, 0.1896981, 0.20303092, 0.197665512, 0.194723367, 0.192214513, 0.194153838, 0.197876282, 0.203157893, 0.205145251, 0.204680443, 0.214364657, 0.219069767, 0.215487577, 0.223563291, 0.222683214, 0.23807922, 0.247556218, 0.272592728, 0.286018831, 0.314372815, 0.351840643, 0.360170912, 0.394723965, 0.390104493, 0.471537651, 0.487864541, 0.489528102, 0.560911116, 0.608202874, 0.692671761, 0.822484649, 0.92006502, 0.921327774, 1.01495762, 1.07924935, 1.18428152, 1.3324483, 1.60428934, 1.93887033, 2.14114156, 2.50433584, 2.71558876, 3.68758297, 3.78839303, 4.72034496, 5.36209114, 6.82413314, 7.50230198, 10.2190824, 11.8307807, 13.758961, 18.6300786, 26.014867, 45.2224329])

##
########################################################


massesString = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0,9100.,9200.,9300.,9400.,9500.,9600.,9700.,9800.,9900.,10000.])
xsString = array('d', [8316.184311558545,5312.93137758767,3435.0309937336524,2304.4139502741305,1569.8115447896687,1090.9516635659693,770.901859690924,551.9206062572061,399.69535383507633,293.77957451762086,218.15126842827823,162.87634729465125,123.17685479653694,93.63530805932386,71.53697229809124,55.37491301647483,42.75271508357369,33.36378355470234,26.06619302090876,20.311817606835643,16.1180931789545,12.768644973921226,10.142660425967444,8.057990848043234,6.400465846290908,5.115134438331436,4.132099789492928,3.3193854239538734,2.6581204529344302,2.157554604919995,1.7505176068913348,1.4049155245498584,1.140055677916783,0.9253251132104159,0.7522038169131606,0.6119747371392215,0.49612321727328523,0.40492020959456737,0.33091999402250655,0.27017917021492555,0.2201693919322846,0.17830700070267996,0.14564253802358157,0.11940534430331146,0.09694948234356839,0.0793065371847468,0.06446186373361917,0.05282660618352478,
                       0.0428516302310620888,0.0348997638039910363,0.0283334766442618227,0.0231416918363592127,0.0187417921340763783,0.0153501307395115115,0.0124396534127133717,0.0100542205744949455,0.0081744954858627415,0.0066338099362915941,0.0053365711503318145,0.00430912459914657443,0.00346381039244064343,0.00278602671711227174,0.00225154342228859257,0.0018082930150063248,0.00143929440338502119,0.0011581373956044489,0.00091869589873893118,0.00073410823691329855,0.00058669382997948734,0.0004661568745858897,0.000368716655469570365,0.000293168485206959169,0.000230224535021638668,0.000182317101888465142,0.000143263359883433282,0.000112630538527214965,0.000088189175598406759,0.000068708474367442343,0.000053931726669273556,0.0000416417855733682702,0.0000326529676755488658,0.0000254365480426201587,0.0000198410151166864761,0.0000154034425617473576,0.0000119095554601641413,9.2537574320108232e-6,7.2155417437856749e-6,5.6130924422251982e-6,4.36634755605624901e-6,3.39717456406994868e-6,2.6766018046173896e-6])

massesQstar = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])
xsQstar = array('d', [0.4101E+03,0.2620E+03,0.1721E+03,0.1157E+03,0.7934E+02,0.5540E+02,0.3928E+02,0.2823E+02,0.2054E+02,0.1510E+02,0.1121E+02,0.8390E+01,0.6328E+01,0.4807E+01,0.3674E+01,0.2824E+01,0.2182E+01,0.1694E+01,0.1320E+01,0.1033E+01,0.8116E+00,0.6395E+00,0.5054E+00,0.4006E+00,0.3182E+00,0.2534E+00,0.2022E+00,0.1616E+00,0.1294E+00,0.1038E+00,0.8333E-01,0.6700E-01,0.5392E-01,0.4344E-01,0.3503E-01,0.2827E-01,0.2283E-01,0.1844E-01,0.1490E-01,0.1205E-01,0.9743E-02,0.7880E-02,0.6373E-02,0.5155E-02,0.4169E-02,0.3371E-02,0.2725E-02,0.2202E-02,0.1779E-02,0.1437E-02,0.1159E-02,0.9353E-03,0.7541E-03,0.6076E-03,0.4891E-03,0.3935E-03,0.3164E-03,0.2541E-03,0.2039E-03,0.1635E-03,0.1310E-03,0.1049E-03,0.8385E-04,0.6699E-04,0.5347E-04,0.4264E-04,0.3397E-04,0.2704E-04,0.2151E-04,0.1709E-04,0.1357E-04,0.1077E-04,0.8544E-05,0.6773E-05,0.5367E-05,0.4251E-05,0.3367E-05,0.2666E-05,0.2112E-05,0.1673E-05,0.1326E-05])

graph_xsString = TGraph(len(massesString),massesString,xsString)
graph_xsString.SetLineWidth(3)
graph_xsString.SetLineStyle(8)
graph_xsString.SetLineColor(9)

graph_xsQstar = TGraph(len(massesQstar),massesQstar,xsQstar)
graph_xsQstar.SetLineWidth(3)
graph_xsQstar.SetLineStyle(2)
graph_xsQstar.SetLineColor(1)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qg resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-02,1e+03)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsQstar.Draw("L")
graph_xsString.Draw("L")

legend = TLegend(.60,.55,.90,.70)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legendTh = TLegend(.60,.80,.90,.88)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.03)
legendTh.AddEntry(graph_xsString,"String","l")
legendTh.AddEntry(graph_xsQstar,"Excited quark","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

# draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "40.2 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_40p2_invpb.eps')
