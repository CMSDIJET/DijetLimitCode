#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
#syst = False

mass_min = 1300
mass_max = 7000

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qq | tee stats_" + str(int(mass)) + "_qq.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

### for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qq.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [8.0158, 10.5788, 4.65056, 2.57241, 2.05967, 1.01622, 0.860767, 1.06139, 1.17236, 0.954049, 0.965226, 1.24654, 1.24543, 0.918677, 0.713323, 0.7754, 0.821743, 0.737862, 0.578853, 0.434062, 0.316459, 0.239236, 0.197947, 0.183178, 0.175149, 0.164938, 0.160147, 0.155912, 0.148799, 0.137963, 0.133585, 0.13138, 0.122696, 0.133014, 0.138529, 0.139831, 0.138922, 0.136889, 0.133604, 0.129398, 0.124811, 0.120285, 0.116131, 0.112947, 0.11268, 0.108712, 0.105079, 0.107114, 0.10674, 0.106475, 0.106144, 0.105845, 0.105907, 0.106192, 0.106281, 0.106309, 0.106659, 0.107262])
xs_exp_limits = array('d', [5.8439, 4.25425, 3.541905, 3.055155, 2.43113, 2.147895, 1.69162, 1.523355, 1.27855, 1.08498, 0.9995345, 0.8714715, 0.8010535, 0.6782465, 0.621159, 0.504092, 0.456937, 0.4138525, 0.3886775, 0.334908, 0.3263765, 0.301576, 0.283081, 0.2485595, 0.224051, 0.2131535, 0.2014945, 0.1885095, 0.1770235, 0.165914, 0.151235, 0.1412885, 0.1417165, 0.12926, 0.1227305, 0.118487, 0.1174055, 0.112705, 0.1076525, 0.104329, 0.1008575, 0.0989312, 0.09689655, 0.0952929, 0.09483955, 0.0937182, 0.0922566, 0.08963275, 0.0901068, 0.09053075, 0.09100155, 0.0911948, 0.0919141, 0.0924769, 0.0929633, 0.0934716, 0.09398665, 0.0945078])

masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma = array('d', [3.3859291, 2.49926729, 2.11830908, 1.75463287, 1.54506604, 1.47476781, 1.16929454, 1.003130986, 0.909352939, 0.814238721, 0.708881944, 0.57708854, 0.502370095, 0.455268332, 0.422991501, 0.372987913, 0.320324277, 0.288719343, 0.263517662, 0.240588225, 0.225233623, 0.217115107, 0.216718573, 0.185378469, 0.168446318, 0.155727529, 0.145980727, 0.140312636, 0.131649617, 0.125157435, 0.119898516, 0.114162274, 0.115853292, 0.102423547, 0.100463603, 0.0965561918, 0.0947295587, 0.0929605106, 0.0916616372, 0.0905064938, 0.0899003194, 0.0883666797, 0.087090115, 0.0861860334, 0.0857396632, 0.0854972814, 0.0848137291, 0.0837718665, 0.0843176273, 0.084866761, 0.085418027, 0.085907193, 0.0865073003, 0.0869777902, 0.087472881, 0.0879287834, 0.0883985783, 0.0889056193, 0.110867216, 0.110194267, 0.1096709, 0.10970198, 0.109707211, 0.109560098, 0.109180397, 0.10966762, 0.110495478, 0.110661224, 0.110893675, 0.119676982, 0.119803801, 0.117417067, 0.119794616, 0.125424036, 0.127298402, 0.129727416, 0.133071158, 0.136488725, 0.141833012, 0.150189698, 0.152708621, 0.165346817, 0.177758229, 0.203129297, 0.194795416, 0.206235291, 0.232439168, 0.237816744, 0.250591248, 0.283012824, 0.307284983, 0.322443077, 0.351704981, 0.397888272, 0.428353867, 0.45133034, 0.502522589, 0.558040029, 0.589775072, 0.682672657, 0.778791781, 0.936376393, 1.03335048, 1.13558894, 1.32939739, 1.45614949, 1.63354024, 1.9728787, 2.22774826, 2.87807287, 3.28303199, 4.19361217, 4.94848098, 5.74313599, 7.27311925, 10.2371501])
xs_exp_limits_2sigma = array('d', [2.12537306, 1.80647636, 1.44735749, 1.18350217, 0.999941561, 0.892451991, 0.809490722, 0.659378065, 0.682885646, 0.576362892, 0.490080059, 0.428396956, 0.37728626, 0.355284282, 0.297859009, 0.287207601, 0.254057097, 0.239199243, 0.218252342, 0.201938627, 0.186555869, 0.173977691, 0.169335561, 0.152315586, 0.142391772, 0.128761619, 0.125532883, 0.118345441, 0.107510266, 0.105661306, 0.100849598, 0.0977244385, 0.0959619865, 0.0931133112, 0.0912406937, 0.0896285528, 0.0872406429, 0.0862523252, 0.0866443342, 0.0849231059, 0.0850775425, 0.0847988891, 0.0838589638, 0.0834798344, 0.0826368006, 0.082364692, 0.0819540448, 0.0814306072, 0.0824135227, 0.0829611789, 0.083494694, 0.0840225239, 0.0845452335, 0.0850372511, 0.085481923, 0.0859032035, 0.0863582628, 0.0868326573, 0.140022999, 0.139592268, 0.13927505, 0.138884542, 0.139165305, 0.139965359, 0.140543613, 0.140841906, 0.141468875, 0.142765155, 0.145043257, 0.156829505, 0.149379702, 0.151529919, 0.159697651, 0.165393018, 0.17501593, 0.170841089, 0.183805782, 0.187146396, 0.195316756, 0.20736404, 0.206331494, 0.220350236, 0.236547258, 0.280294384, 0.266888191, 0.279998994, 0.28149178, 0.314870873, 0.354059497, 0.382947595, 0.408463754, 0.418892444, 0.491364399, 0.556658151, 0.57978143, 0.681549864, 0.691458285, 0.753971112, 0.789439619, 0.930640408, 1.11683146, 1.2893145, 1.51996897, 1.5605165, 1.72151204, 2.08526783, 2.25146088, 2.85917093, 3.20165955, 4.02480508, 5.06999012, 6.05540929, 6.91660715, 8.60934141, 10.4445115, 15.5315905])

if syst:
  masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [14.1649, 13.5941, 10.2922, 5.4879, 3.40148, 2.05455, 1.55915, 1.50971, 1.46022, 1.39205, 1.37247, 1.39601, 1.37696, 1.25389, 1.04808, 0.932584, 0.883213, 0.829673, 0.761487, 0.66881, 0.556168, 0.425744, 0.313808, 0.252651, 0.206045, 0.180583, 0.168285, 0.161365, 0.153008, 0.145284, 0.144482, 0.140282, 0.13222, 0.13774, 0.139349, 0.139841, 0.137624, 0.13747, 0.135045, 0.132615, 0.129781, 0.1264, 0.123183, 0.119357, 0.114977, 0.110612, 0.106199, 0.108093, 0.106641, 0.105808, 0.10463, 0.10614, 0.104164, 0.105481, 0.104485, 0.10493, 0.104527, 0.105371])
  xs_exp_limits = array('d', [12.4376, 8.10187, 6.17594, 4.989095, 4.124785, 3.474835, 2.83222, 2.46139, 1.97498, 1.69714, 1.45996, 1.270205, 1.06064, 0.958562, 0.815537, 0.717602, 0.5980415, 0.5393405, 0.493984, 0.430662, 0.401618, 0.384404, 0.346204, 0.308989, 0.2616815, 0.242763, 0.229183, 0.211736, 0.198466, 0.192951, 0.173, 0.161683, 0.160477, 0.140646, 0.131741, 0.124681, 0.121853, 0.115948, 0.10885, 0.1047445, 0.1024465, 0.09947145, 0.0963119, 0.0946025, 0.0944811, 0.09343545, 0.0919992, 0.0887057, 0.0887729, 0.08935905, 0.0896251, 0.0902391, 0.09053035, 0.0910734, 0.09147545, 0.09199665, 0.09243545, 0.0927634])

  masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma = array('d', [8.4756411, 5.40997668, 4.22562178, 3.52003974, 3.03743889, 2.68306653, 2.13175812, 1.82775883, 1.45810837, 1.24752145, 1.04401408, 0.898981353, 0.754346499, 0.665591771, 0.563026304, 0.510236164, 0.4448946, 0.390620272, 0.355282049, 0.317747478, 0.283369111, 0.278191922, 0.251328876, 0.231605145, 0.200630082, 0.183983745, 0.172339056, 0.160559634, 0.14670733, 0.138516162, 0.129031747, 0.120527789, 0.122036768, 0.107640796, 0.100751399, 0.0952434996, 0.0938673978, 0.091358515, 0.0903087746, 0.0884312804, 0.0878985529, 0.08690413, 0.085903662, 0.0853316301, 0.0852115771, 0.0844848572, 0.0846308302, 0.0827350782, 0.0833071277, 0.0838150127, 0.0842499715, 0.0848131556, 0.0851892183, 0.0856362184, 0.0861733497, 0.0866059405, 0.0869983952, 0.0874953455, 0.108976913, 0.108933956, 0.108373211, 0.107819786, 0.107515246, 0.107297683, 0.108040028, 0.109188906, 0.110266314, 0.111087908, 0.111895294, 0.124242, 0.121295226, 0.12681904, 0.124631153, 0.131902584, 0.134576224, 0.137164489, 0.141198341, 0.149351496, 0.154452964, 0.164526056, 0.173995203, 0.178175259, 0.197100649, 0.21278451, 0.218641111, 0.238423073, 0.260445675, 0.270689928, 0.29000168, 0.326436939, 0.357171043, 0.389599161, 0.448360766, 0.500943786, 0.561125742, 0.555860937, 0.62494038, 0.703048655, 0.748100181, 0.848646545, 0.991915478, 1.16867496, 1.32401509, 1.49873347, 1.80157842, 2.05453144, 2.38470402, 2.820029, 3.37707664, 4.01378665, 4.81708422, 5.78727275, 7.0180686, 8.8259268, 11.8161304, 19.4077832])
  xs_exp_limits_2sigma = array('d', [5.43617534, 4.37148432, 3.18528534, 2.67756856, 2.15628289, 1.96033404, 1.52178157, 1.39229131, 1.14396971, 0.933491965, 0.841470026, 0.687931317, 0.569776151, 0.492932972, 0.446445238, 0.397378768, 0.337311176, 0.314976579, 0.27134976, 0.251171934, 0.224188145, 0.220330928, 0.209656948, 0.178708122, 0.168161389, 0.150498815, 0.137130667, 0.130507338, 0.12199509, 0.113991002, 0.110036496, 0.103899285, 0.1003292236, 0.0934569047, 0.0902207701, 0.0878571184, 0.0857426808, 0.0847863422, 0.0847703322, 0.0838722775, 0.0835630225, 0.0834046188, 0.0831983314, 0.0824160408, 0.0816903293, 0.0811184418, 0.0812077042, 0.0806086498, 0.0815540111, 0.0820623832, 0.0823519769, 0.082836381, 0.0833661791, 0.083921996, 0.0842822285, 0.0844500585, 0.0852629151, 0.0853979199, 0.14585902, 0.146234732, 0.146309159, 0.147282789, 0.14708241, 0.146793122, 0.146296094, 0.146102856, 0.145603651, 0.151296465, 0.154856868, 0.163829366, 0.160998487, 0.170763938, 0.172617266, 0.17807924, 0.184592442, 0.178847067, 0.184640086, 0.19644787, 0.205699892, 0.22012056, 0.222692849, 0.237606426, 0.268530166, 0.298605874, 0.301294014, 0.324775854, 0.379527629, 0.385220556, 0.412593404, 0.431262771, 0.45814035, 0.501228889, 0.600848705, 0.72012652, 0.708071852, 0.79233156, 0.855322998, 0.93541408, 1.01526151, 1.21779318, 1.44772142, 1.54872868, 1.8238816, 2.28919446, 2.75431129, 2.79910368, 3.23218907, 3.77056374, 4.87555954, 5.5659501, 7.32470783, 7.8277114, 9.48472495, 12.9936252, 17.2268884, 28.9551936])

##
########################################################

massesTh = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])

xsAxi = array('d', [0.1849E+03,0.1236E+03,0.8473E+02,0.5937E+02,0.4235E+02,0.3069E+02,0.2257E+02,0.1680E+02,0.1263E+02,0.9577E+01,0.7317E+01,0.5641E+01,0.4374E+01,0.3411E+01,0.2672E+01,0.2103E+01,0.1658E+01,0.1312E+01,0.1041E+01,0.8284E+00,0.6610E+00,0.5294E+00,0.4250E+00,0.3417E+00,0.2752E+00,0.2220E+00,0.1792E+00,0.1449E+00,0.1172E+00,0.9487E-01,0.7686E-01,0.6219E-01,0.5033E-01,0.4074E-01,0.3298E-01,0.2671E-01,0.2165E-01,0.1755E-01,0.1422E-01,0.1152E-01,0.9322E-02,0.7539E-02,0.6092E-02,0.4917E-02,0.3965E-02,0.3193E-02,0.2568E-02,0.2062E-02,0.1653E-02,0.1323E-02,0.1057E-02,0.8442E-03,0.6728E-03,0.5349E-03,0.4242E-03,0.3357E-03,0.2644E-03,0.2077E-03,0.1627E-03,0.1271E-03,0.9891E-04,0.7686E-04,0.5951E-04,0.4592E-04,0.3530E-04,0.2704E-04,0.2059E-04,0.1562E-04,0.1180E-04,0.8882E-05,0.6657E-05,0.4968E-05,0.3693E-05,0.2734E-05,0.2016E-05,0.1481E-05,0.1084E-05,0.7903E-06,0.5744E-06,0.4160E-06,0.3007E-06])
xsDiquark = array('d', [0.5824E+02,0.4250E+02,0.3172E+02,0.2411E+02,0.1862E+02,0.1457E+02,0.1153E+02,0.9211E+01,0.7419E+01,0.6019E+01,0.4912E+01,0.4031E+01,0.3323E+01,0.2750E+01,0.2284E+01,0.1903E+01,0.1590E+01,0.1331E+01,0.1117E+01,0.9386E+00,0.7900E+00,0.6658E+00,0.5618E+00,0.4745E+00,0.4010E+00,0.3391E+00,0.2869E+00,0.2428E+00,0.2055E+00,0.1740E+00,0.1473E+00,0.1246E+00,0.1055E+00,0.8922E-01,0.7544E-01,0.6376E-01,0.5385E-01,0.4546E-01,0.3834E-01,0.3231E-01,0.2720E-01,0.2288E-01,0.1922E-01,0.1613E-01,0.1352E-01,0.1132E-01,0.9463E-02,0.7900E-02,0.6584E-02,0.5479E-02,0.4551E-02,0.3774E-02,0.3124E-02,0.2581E-02,0.2128E-02,0.1750E-02,0.1437E-02,0.1177E-02,0.9612E-03,0.7833E-03,0.6366E-03,0.5160E-03,0.4170E-03,0.3360E-03,0.2700E-03,0.2162E-03,0.1725E-03,0.1372E-03,0.1087E-03,0.8577E-04,0.6742E-04,0.5278E-04,0.4114E-04,0.3192E-04,0.2465E-04,0.1894E-04,0.1448E-04,0.1101E-04,0.8322E-05,0.6253E-05,0.4670E-05])
xsWprime = array('d', [0.8811E+01,0.6024E+01,0.4216E+01,0.3010E+01,0.2185E+01,0.1610E+01,0.1200E+01,0.9043E+00,0.6875E+00,0.5271E+00,0.4067E+00,0.3158E+00,0.2464E+00,0.1932E+00,0.1521E+00,0.1201E+00,0.9512E-01,0.7554E-01,0.6012E-01,0.4792E-01,0.3827E-01,0.3059E-01,0.2448E-01,0.1960E-01,0.1571E-01,0.1259E-01,0.1009E-01,0.8090E-02,0.6483E-02,0.5193E-02,0.4158E-02,0.3327E-02,0.2660E-02,0.2125E-02,0.1695E-02,0.1351E-02,0.1075E-02,0.8546E-03,0.6781E-03,0.5372E-03,0.4248E-03,0.3353E-03,0.2642E-03,0.2077E-03,0.1629E-03,0.1275E-03,0.9957E-04,0.7757E-04,0.6027E-04,0.4670E-04,0.3610E-04,0.2783E-04,0.2140E-04,0.1641E-04,0.1254E-04,0.9561E-05,0.7269E-05,0.5510E-05,0.4167E-05,0.3143E-05,0.2364E-05,0.1774E-05,0.1329E-05,0.9931E-06,0.7411E-06,0.5523E-06,0.4108E-06,0.3055E-06,0.2271E-06,0.1687E-06,0.1254E-06,0.9327E-07,0.6945E-07,0.5177E-07,0.3863E-07,0.2888E-07,0.2162E-07,0.1622E-07,0.1218E-07,0.9156E-08,0.6893E-08])
xsZprime = array('d', [0.5027E+01,0.3398E+01,0.2353E+01,0.1663E+01,0.1196E+01,0.8729E+00,0.6450E+00,0.4822E+00,0.3638E+00,0.2769E+00,0.2123E+00,0.1639E+00,0.1272E+00,0.9933E-01,0.7789E-01,0.6134E-01,0.4848E-01,0.3845E-01,0.3059E-01,0.2440E-01,0.1952E-01,0.1564E-01,0.1256E-01,0.1010E-01,0.8142E-02,0.6570E-02,0.5307E-02,0.4292E-02,0.3473E-02,0.2813E-02,0.2280E-02,0.1848E-02,0.1499E-02,0.1216E-02,0.9864E-03,0.8002E-03,0.6490E-03,0.5262E-03,0.4264E-03,0.3453E-03,0.2795E-03,0.2260E-03,0.1826E-03,0.1474E-03,0.1188E-03,0.9566E-04,0.7690E-04,0.6173E-04,0.4947E-04,0.3957E-04,0.3159E-04,0.2516E-04,0.2001E-04,0.1587E-04,0.1255E-04,0.9906E-05,0.7795E-05,0.6116E-05,0.4785E-05,0.3731E-05,0.2900E-05,0.2247E-05,0.1734E-05,0.1334E-05,0.1022E-05,0.7804E-06,0.5932E-06,0.4492E-06,0.3388E-06,0.2544E-06,0.1903E-06,0.1417E-06,0.1051E-06,0.7764E-07,0.5711E-07,0.4186E-07,0.3055E-07,0.2223E-07,0.1612E-07,0.1164E-07,0.8394E-08])

graph_xsAxi = TGraph(len(massesTh),massesTh,xsAxi)
graph_xsAxi.SetLineWidth(3)
graph_xsAxi.SetLineStyle(3)
graph_xsAxi.SetLineColor(63)

graph_xsDiquark = TGraph(len(massesTh),massesTh,xsDiquark)
graph_xsDiquark.SetLineWidth(3)
graph_xsDiquark.SetLineStyle(9)
graph_xsDiquark.SetLineColor(8)

graph_xsWprime = TGraph(len(massesTh),massesTh,xsWprime)
graph_xsWprime.SetLineWidth(3)
graph_xsWprime.SetLineStyle(7)
graph_xsWprime.SetLineColor(46)

graph_xsZprime = TGraph(len(massesTh),massesTh,xsZprime)
graph_xsZprime.SetLineWidth(3)
graph_xsZprime.SetLineStyle(5)
graph_xsZprime.SetLineColor(38)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qq resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-02,1e+03)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsAxi.Draw("L")
graph_xsDiquark.Draw("L")
graph_xsWprime.Draw("L")
graph_xsZprime.Draw("L")

legend = TLegend(.60,.55,.90,.70)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legendTh = TLegend(.60,.72,.90,.88)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.03)
legendTh.AddEntry(graph_xsAxi,"Axigluon/coloron","l")
legendTh.AddEntry(graph_xsDiquark,"Scalar diquark","l")
legendTh.AddEntry(graph_xsWprime,"W' SSM","l")
legendTh.AddEntry(graph_xsZprime,"Z' SSM","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "40.2 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qq' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_40p2_invpb.eps')
