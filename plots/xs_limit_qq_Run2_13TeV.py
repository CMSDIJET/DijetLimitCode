#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.06)
gStyle.SetPadBottomMargin(0.14)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
#syst = False

mass_min = 1500
mass_max = 7000

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qq | tee stats_" + str(int(mass)) + "_qq.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

### for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qq.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [0.373245, 0.729224, 0.749304, 0.51653, 0.485702, 0.31179, 0.204037, 0.145153, 0.118367, 0.12084, 0.104699, 0.0848555, 0.0641548, 0.0543576, 0.047996, 0.0478736, 0.0520838, 0.056903, 0.0542284, 0.0515971, 0.0509319, 0.0531768, 0.0551673, 0.0566582, 0.0565528, 0.0529559, 0.045109, 0.0329733, 0.0218742, 0.014847, 0.0113783, 0.00880015, 0.00724962, 0.00675315, 0.00682426, 0.00692529, 0.0071654, 0.00704883, 0.00684132, 0.00655443, 0.00640048, 0.00642755, 0.00646899, 0.00668889, 0.00649358, 0.00614679, 0.00576717, 0.00529031, 0.00482739, 0.00436217, 0.00421678, 0.00410902, 0.00411572, 0.00418978, 0.00428701, 0.00433157])
xs_exp_limits = array('d', [0.676823, 0.5293625, 0.398825, 0.340792, 0.2879685, 0.2517005, 0.2200845, 0.2007295, 0.1668755, 0.144864, 0.1282025, 0.1098995, 0.09719825, 0.0901967, 0.0833574, 0.0701342, 0.0609684, 0.0541542, 0.0482992, 0.04679215, 0.04156035, 0.03633395, 0.03206895, 0.0280869, 0.02571885, 0.02370295, 0.02172135, 0.0199726, 0.01803245, 0.016692, 0.01641875, 0.01485385, 0.0138403, 0.01265835, 0.0120821, 0.0107712, 0.00979475, 0.00901551, 0.00845537, 0.007665285, 0.007026815, 0.006803575, 0.0064069, 0.005779425, 0.005424805, 0.005038205, 0.004803375, 0.004742145, 0.00451236, 0.004314105, 0.004345175, 0.004166715, 0.00403069, 0.003870555, 0.00363478, 0.003690605])

masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
xs_exp_limits_1sigma = array('d', [0.345910396, 0.285426054, 0.243093189, 0.217228566, 0.19832148, 0.163488642, 0.139325458, 0.118184081, 0.103473714, 0.0963180196, 0.0853655223, 0.0705776797, 0.06426966, 0.0568320357, 0.0525876517, 0.0477131668, 0.0402682342, 0.0352827595, 0.0335788805, 0.0311097574, 0.0266802627, 0.0248001744, 0.0213450292, 0.0205227694, 0.0173244727, 0.0160394526, 0.0147633825, 0.0135838747, 0.0128298994, 0.0120872367, 0.0110793477, 0.0109766481, 0.00971922406, 0.00900048163, 0.00819864576, 0.00750625422, 0.00700148905, 0.00664646107, 0.00593490545, 0.00565322424, 0.00503788775, 0.00497003604, 0.00462063968, 0.00434606697, 0.00406180133, 0.00379315839, 0.00368898657, 0.00354951115, 0.00351374464, 0.00340198139, 0.00328635906, 0.00314952834, 0.00308649086, 0.00303062294, 0.00288438855, 0.0028352874, 0.00488343498, 0.00504647251, 0.00532189577, 0.00553205129, 0.00579220363, 0.00596917101, 0.00630951715, 0.00653761149, 0.00650678045, 0.00702553218, 0.00735251857, 0.00764684602, 0.00792041199, 0.00892057484, 0.00966730742, 0.0102460031, 0.0111354634, 0.0119328581, 0.0130622688, 0.0143765222, 0.0151440882, 0.0164346674, 0.019302779, 0.019810795, 0.0211159569, 0.0227035824, 0.0238160367, 0.0277173943, 0.029813966, 0.033605379, 0.0331979654, 0.0388083993, 0.0410384844, 0.0482152457, 0.052353526, 0.060101522, 0.0667805045, 0.0716667213, 0.0848770501, 0.0931324535, 0.10345614, 0.122621378, 0.140394258, 0.150102411, 0.171562924, 0.195819154, 0.223245265, 0.260812043, 0.305705613, 0.341439812, 0.404413842, 0.459132106, 0.572751752, 0.699719137, 0.940761971, 1.18121166])
xs_exp_limits_2sigma = array('d', [0.229153342, 0.18468504, 0.165025908, 0.151014712, 0.120771066, 0.106792391, 0.0907434571, 0.0821075871, 0.0710722258, 0.0665596548, 0.0591109493, 0.0488387221, 0.0498921893, 0.0419342725, 0.0339599795, 0.0317583687, 0.0289661545, 0.0261709154, 0.02359091, 0.0238298795, 0.0200411678, 0.0168636758, 0.0161958424, 0.0143215811, 0.0127337301, 0.0120241841, 0.0110869743, 0.00978813423, 0.00956575235, 0.00887586598, 0.0081382763, 0.00741397614, 0.0072968249, 0.0071115288, 0.00629227317, 0.00592501727, 0.00533502835, 0.00514718611, 0.00476928687, 0.00454586697, 0.00405141922, 0.00400876358, 0.00380327382, 0.00364437528, 0.00332120921, 0.0031509274, 0.00289714145, 0.00284358708, 0.00286396212, 0.00274027848, 0.00266117506, 0.00261343869, 0.00257837469, 0.00255721737, 0.00246843331, 0.00246566805, 0.00685055343, 0.00752593134, 0.00816779604, 0.00855869057, 0.00892042702, 0.00905656297, 0.00926652946, 0.00954206322, 0.00898576002, 0.0094250728, 0.00946290423, 0.01002805232, 0.0105113729, 0.0118364028, 0.0134389943, 0.0133347403, 0.0153525244, 0.0159311386, 0.0173756272, 0.0191916254, 0.020760321, 0.0228953793, 0.0253019921, 0.0259191419, 0.0281330021, 0.0315755438, 0.0338459533, 0.0388502178, 0.0427695196, 0.0449353885, 0.0476913492, 0.0571331374, 0.0575337879, 0.0725738311, 0.0734272241, 0.0856770261, 0.0902816963, 0.100403776, 0.12136518, 0.130856734, 0.150828203, 0.169985178, 0.198563598, 0.212634724, 0.244447214, 0.290378914, 0.341187995, 0.383622078, 0.431482265, 0.493763782, 0.555555619, 0.669290008, 0.835346774, 1.12618395, 1.41005048, 1.82687316])

if syst:
  masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [0.82147, 1.19683, 1.09947, 0.803474, 0.629664, 0.461803, 0.301626, 0.210189, 0.169315, 0.15975, 0.14034, 0.114906, 0.0928419, 0.0770832, 0.0679586, 0.0665974, 0.069166, 0.0700806, 0.0679091, 0.0641745, 0.0629837, 0.0629184, 0.0639981, 0.0638037, 0.0617575, 0.0586043, 0.0529361, 0.0451882, 0.0343616, 0.0229805, 0.0148121, 0.0108115, 0.00867909, 0.00748847, 0.00726895, 0.00732564, 0.00739262, 0.00732058, 0.00711229, 0.00692194, 0.0067567, 0.00672501, 0.00655951, 0.00653841, 0.00637906, 0.00610068, 0.00584878, 0.00551712, 0.00507471, 0.00466002, 0.00446959, 0.00431538, 0.00420174, 0.00419521, 0.00425214, 0.00424506])
  xs_exp_limits = array('d', [1.25232, 0.996774, 0.7815935, 0.604155, 0.4599715, 0.3724675, 0.298686, 0.257382, 0.2284925, 0.2014455, 0.1757395, 0.155858, 0.135611, 0.1222025, 0.1065885, 0.0893078, 0.08021135, 0.0695399, 0.0617724, 0.0599736, 0.05101905, 0.0456115, 0.0417081, 0.036968, 0.0313885, 0.0281677, 0.02636, 0.0242915, 0.02153105, 0.01978565, 0.01805905, 0.0161204, 0.0150401, 0.01367445, 0.01268845, 0.011698, 0.0103915, 0.00971092, 0.0090192, 0.008259385, 0.007745975, 0.00715103, 0.006567665, 0.00608866, 0.005588195, 0.00531195, 0.005082815, 0.004825495, 0.00484148, 0.00457326, 0.00440779, 0.004285375, 0.00415029, 0.0040409, 0.003835485, 0.0037301])

  masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
  xs_exp_limits_1sigma = array('d', [0.77007748, 0.657515187, 0.554964336, 0.423654302, 0.329494282, 0.258679347, 0.206747047, 0.186153983, 0.159302223, 0.139559871, 0.120613169, 0.111949951, 0.0978635208, 0.0872069994, 0.0770633536, 0.0658235368, 0.058407683, 0.0517485251, 0.046106648, 0.0418188912, 0.0348711766, 0.0316683113, 0.0288335278, 0.0251396485, 0.0221221603, 0.0196937421, 0.018298335, 0.016013538, 0.0155855956, 0.0136294013, 0.0128360597, 0.0114897839, 0.0109230971, 0.0101560696, 0.00916743823, 0.00823069324, 0.00772560251, 0.00716852115, 0.00661234301, 0.00599554838, 0.00563627268, 0.00511932968, 0.00498801426, 0.00447592786, 0.00416341727, 0.0039554467, 0.00372556958, 0.00364850861, 0.00361871453, 0.00343980824, 0.00338209654, 0.00327660532, 0.00318866053, 0.00309162245, 0.00298329899, 0.00284447549, 0.00494672027, 0.0053532603, 0.00545573347, 0.00558722931, 0.00578797655, 0.0061003351, 0.00650657068, 0.00686941865, 0.00716253565, 0.00751141641, 0.00772844718, 0.00829812154, 0.00920999141, 0.0096298207, 0.00995486682, 0.0111147589, 0.011933983, 0.0128869563, 0.0139543467, 0.0152068716, 0.0165151771, 0.0183466652, 0.0191517066, 0.0209324162, 0.0239128763, 0.0247535731, 0.0269506119, 0.0311031786, 0.0343544153, 0.0374063534, 0.0405921036, 0.0453927593, 0.0513411583, 0.0573946245, 0.0653979223, 0.0691144617, 0.0814421286, 0.0908911722, 0.103340394, 0.117950211, 0.131213811, 0.148008906, 0.176740316, 0.197863533, 0.227326158, 0.263435232, 0.284968146, 0.319261054, 0.368403871, 0.431166241, 0.517372828, 0.66467924, 0.842488063, 1.09557887, 1.40524887, 1.81630049])
  xs_exp_limits_2sigma = array('d', [0.487344006, 0.468021162, 0.386091841, 0.296269572, 0.22659272, 0.179278983, 0.150869429, 0.13717558, 0.114339332, 0.101465271, 0.0875702828, 0.0768350651, 0.0698956535, 0.0694126991, 0.0578823032, 0.0475720143, 0.0435462527, 0.0402392945, 0.0339136255, 0.0294791785, 0.0269854176, 0.0239049199, 0.0217650021, 0.0194575001, 0.0158852522, 0.0147041419, 0.0134741614, 0.0115096293, 0.0108213292, 0.0103409393, 0.00976476963, 0.00874018065, 0.0081988146, 0.00745503548, 0.0064737419, 0.00599402779, 0.00579145116, 0.0055987541, 0.00504168412, 0.00484725739, 0.00462610411, 0.00411477101, 0.00385300373, 0.0035207839, 0.00322696138, 0.00301880474, 0.00286615523, 0.00284939091, 0.00280253712, 0.00270582054, 0.00259618263, 0.00256972214, 0.00252405893, 0.00250837225, 0.00250076466, 0.00246318564, 0.00714785082, 0.00772928351, 0.0073864527, 0.00786418724, 0.00814276112, 0.0084951294, 0.00912619854, 0.00959384589, 0.00983479434, 0.0104889784, 0.0114988077, 0.0121161259, 0.0133251093, 0.0145172721, 0.0155330339, 0.0155510774, 0.0171284523, 0.0182255043, 0.0191639928, 0.0201167111, 0.0213257501, 0.0250825444, 0.0281115679, 0.03226144, 0.0335142979, 0.0357803684, 0.0371520007, 0.0409549459, 0.0485550769, 0.0510840072, 0.057953682, 0.0643018794, 0.072315769, 0.0809712261, 0.0863852512, 0.0943082849, 0.112675, 0.122407814, 0.136037438, 0.15492059, 0.179168797, 0.204338488, 0.239008929, 0.262260508, 0.298197063, 0.345330072, 0.415087015, 0.421668424, 0.542583584, 0.596252775, 0.686501575, 0.872692271, 1.15128561, 1.48638166, 1.98588338, 2.46499462])

##
########################################################

massesTh = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])

xsAxi = array('d', [0.1849E+03,0.1236E+03,0.8473E+02,0.5937E+02,0.4235E+02,0.3069E+02,0.2257E+02,0.1680E+02,0.1263E+02,0.9577E+01,0.7317E+01,0.5641E+01,0.4374E+01,0.3411E+01,0.2672E+01,0.2103E+01,0.1658E+01,0.1312E+01,0.1041E+01,0.8284E+00,0.6610E+00,0.5294E+00,0.4250E+00,0.3417E+00,0.2752E+00,0.2220E+00,0.1792E+00,0.1449E+00,0.1172E+00,0.9487E-01,0.7686E-01,0.6219E-01,0.5033E-01,0.4074E-01,0.3298E-01,0.2671E-01,0.2165E-01,0.1755E-01,0.1422E-01,0.1152E-01,0.9322E-02,0.7539E-02,0.6092E-02,0.4917E-02,0.3965E-02,0.3193E-02,0.2568E-02,0.2062E-02,0.1653E-02,0.1323E-02,0.1057E-02,0.8442E-03,0.6728E-03,0.5349E-03,0.4242E-03,0.3357E-03,0.2644E-03,0.2077E-03,0.1627E-03,0.1271E-03,0.9891E-04,0.7686E-04,0.5951E-04,0.4592E-04,0.3530E-04,0.2704E-04,0.2059E-04,0.1562E-04,0.1180E-04,0.8882E-05,0.6657E-05,0.4968E-05,0.3693E-05,0.2734E-05,0.2016E-05,0.1481E-05,0.1084E-05,0.7903E-06,0.5744E-06,0.4160E-06,0.3007E-06])
xsDiquark = array('d', [0.5824E+02,0.4250E+02,0.3172E+02,0.2411E+02,0.1862E+02,0.1457E+02,0.1153E+02,0.9211E+01,0.7419E+01,0.6019E+01,0.4912E+01,0.4031E+01,0.3323E+01,0.2750E+01,0.2284E+01,0.1903E+01,0.1590E+01,0.1331E+01,0.1117E+01,0.9386E+00,0.7900E+00,0.6658E+00,0.5618E+00,0.4745E+00,0.4010E+00,0.3391E+00,0.2869E+00,0.2428E+00,0.2055E+00,0.1740E+00,0.1473E+00,0.1246E+00,0.1055E+00,0.8922E-01,0.7544E-01,0.6376E-01,0.5385E-01,0.4546E-01,0.3834E-01,0.3231E-01,0.2720E-01,0.2288E-01,0.1922E-01,0.1613E-01,0.1352E-01,0.1132E-01,0.9463E-02,0.7900E-02,0.6584E-02,0.5479E-02,0.4551E-02,0.3774E-02,0.3124E-02,0.2581E-02,0.2128E-02,0.1750E-02,0.1437E-02,0.1177E-02,0.9612E-03,0.7833E-03,0.6366E-03,0.5160E-03,0.4170E-03,0.3360E-03,0.2700E-03,0.2162E-03,0.1725E-03,0.1372E-03,0.1087E-03,0.8577E-04,0.6742E-04,0.5278E-04,0.4114E-04,0.3192E-04,0.2465E-04,0.1894E-04,0.1448E-04,0.1101E-04,0.8322E-05,0.6253E-05,0.4670E-05])
xsWprime = array('d', [0.8811E+01,0.6024E+01,0.4216E+01,0.3010E+01,0.2185E+01,0.1610E+01,0.1200E+01,0.9043E+00,0.6875E+00,0.5271E+00,0.4067E+00,0.3158E+00,0.2464E+00,0.1932E+00,0.1521E+00,0.1201E+00,0.9512E-01,0.7554E-01,0.6012E-01,0.4792E-01,0.3827E-01,0.3059E-01,0.2448E-01,0.1960E-01,0.1571E-01,0.1259E-01,0.1009E-01,0.8090E-02,0.6483E-02,0.5193E-02,0.4158E-02,0.3327E-02,0.2660E-02,0.2125E-02,0.1695E-02,0.1351E-02,0.1075E-02,0.8546E-03,0.6781E-03,0.5372E-03,0.4248E-03,0.3353E-03,0.2642E-03,0.2077E-03,0.1629E-03,0.1275E-03,0.9957E-04,0.7757E-04,0.6027E-04,0.4670E-04,0.3610E-04,0.2783E-04,0.2140E-04,0.1641E-04,0.1254E-04,0.9561E-05,0.7269E-05,0.5510E-05,0.4167E-05,0.3143E-05,0.2364E-05,0.1774E-05,0.1329E-05,0.9931E-06,0.7411E-06,0.5523E-06,0.4108E-06,0.3055E-06,0.2271E-06,0.1687E-06,0.1254E-06,0.9327E-07,0.6945E-07,0.5177E-07,0.3863E-07,0.2888E-07,0.2162E-07,0.1622E-07,0.1218E-07,0.9156E-08,0.6893E-08])
xsZprime = array('d', [0.5027E+01,0.3398E+01,0.2353E+01,0.1663E+01,0.1196E+01,0.8729E+00,0.6450E+00,0.4822E+00,0.3638E+00,0.2769E+00,0.2123E+00,0.1639E+00,0.1272E+00,0.9933E-01,0.7789E-01,0.6134E-01,0.4848E-01,0.3845E-01,0.3059E-01,0.2440E-01,0.1952E-01,0.1564E-01,0.1256E-01,0.1010E-01,0.8142E-02,0.6570E-02,0.5307E-02,0.4292E-02,0.3473E-02,0.2813E-02,0.2280E-02,0.1848E-02,0.1499E-02,0.1216E-02,0.9864E-03,0.8002E-03,0.6490E-03,0.5262E-03,0.4264E-03,0.3453E-03,0.2795E-03,0.2260E-03,0.1826E-03,0.1474E-03,0.1188E-03,0.9566E-04,0.7690E-04,0.6173E-04,0.4947E-04,0.3957E-04,0.3159E-04,0.2516E-04,0.2001E-04,0.1587E-04,0.1255E-04,0.9906E-05,0.7795E-05,0.6116E-05,0.4785E-05,0.3731E-05,0.2900E-05,0.2247E-05,0.1734E-05,0.1334E-05,0.1022E-05,0.7804E-06,0.5932E-06,0.4492E-06,0.3388E-06,0.2544E-06,0.1903E-06,0.1417E-06,0.1051E-06,0.7764E-07,0.5711E-07,0.4186E-07,0.3055E-07,0.2223E-07,0.1612E-07,0.1164E-07,0.8394E-08])

xs_max = 2e+01
idx = 0

for i, xs in enumerate(xsAxi):
  if xs < xs_max:
    idx = i
    break

graph_xsAxi = TGraph(len(massesTh[idx:-1]),massesTh[idx:-1],xsAxi[idx:-1])
graph_xsAxi.SetLineWidth(3)
graph_xsAxi.SetLineStyle(3)
graph_xsAxi.SetLineColor(63)

for i, xs in enumerate(xsDiquark):
  if xs < xs_max:
    idx = i
    break

graph_xsDiquark = TGraph(len(massesTh[idx:-1]),massesTh[idx:-1],xsDiquark[idx:-1])
graph_xsDiquark.SetLineWidth(3)
graph_xsDiquark.SetLineStyle(9)
graph_xsDiquark.SetLineColor(42)

graph_xsWprime = TGraph(len(massesTh),massesTh,xsWprime)
graph_xsWprime.SetLineWidth(3)
graph_xsWprime.SetLineStyle(7)
graph_xsWprime.SetLineColor(46)

graph_xsZprime = TGraph(len(massesTh),massesTh,xsZprime)
graph_xsZprime.SetLineWidth(3)
graph_xsZprime.SetLineStyle(5)
graph_xsZprime.SetLineColor(38)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qq resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-03,1e+02)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsAxi.Draw("L")
graph_xsDiquark.Draw("L")
graph_xsWprime.Draw("L")
graph_xsZprime.Draw("L")

legend = TLegend(.55,.50,.90,.70)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.035)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legendTh = TLegend(.55,.72,.90,.88)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.035)
legendTh.AddEntry(graph_xsAxi,"Axigluon/coloron","l")
legendTh.AddEntry(graph_xsDiquark,"Scalar diquark","l")
legendTh.AddEntry(graph_xsWprime,"W'","l")
legendTh.AddEntry(graph_xsZprime,"Z'","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "1769 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
if( iPos==0 ): CMS_lumi.relPosX = 0.15
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qq' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_1769_invpb.eps')
