#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
#syst = False

mass_min = 1300
mass_max = 7000

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qq | tee stats_" + str(int(mass)) + "_qq.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

### for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qq.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [9.20414, 6.46756, 9.75353, 5.52489, 2.6515, 1.8268, 1.15166, 0.89812, 0.899687, 0.982368, 0.888957, 0.797769, 0.910204, 1.26509, 1.31159, 0.936666, 0.626957, 0.647552, 0.790112, 0.821323, 0.717788, 0.562002, 0.419864, 0.315301, 0.237014, 0.200394, 0.185005, 0.175093, 0.165276, 0.159748, 0.155628, 0.149022, 0.140277, 0.129785, 0.129573, 0.128112, 0.126267, 0.132322, 0.135556, 0.135839, 0.134694, 0.132778, 0.129958, 0.126311, 0.123086, 0.119043, 0.115495, 0.112104, 0.109159, 0.111718, 0.109867, 0.108461, 0.107637, 0.110966, 0.110893, 0.110689, 0.110496, 0.110653])
xs_exp_limits = array('d', [6.3096, 5.22297, 4.25223, 3.47572, 3.04047, 2.60441, 2.15104, 1.78077, 1.66965, 1.42838, 1.19613, 1.08528, 0.913016, 0.790579, 0.725155, 0.643135, 0.587455, 0.501085, 0.455891, 0.418071, 0.374923, 0.347929, 0.326963, 0.297864, 0.273909, 0.253204, 0.235359, 0.218651, 0.20471, 0.189115, 0.178858, 0.159363, 0.159808, 0.157049, 0.141023, 0.134004, 0.131722, 0.122563, 0.11646, 0.112234, 0.107646, 0.10364, 0.0998586, 0.0990011, 0.096574, 0.0956892, 0.0946548, 0.0924197, 0.0923265, 0.092337, 0.0942341, 0.0956634, 0.0950288, 0.0940434, 0.0944047, 0.0949219, 0.0953054, 0.0958432])

masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma = array('d', [3.62742, 3.39367, 2.56667, 2.17206, 1.87709, 1.73987, 1.45993, 1.24967, 1.06286, 0.921558, 0.827841, 0.773384, 0.625124, 0.533874, 0.483396, 0.441064, 0.411889, 0.35506, 0.316872, 0.284908, 0.264759, 0.247759, 0.222899, 0.219916, 0.201168, 0.192709, 0.17628, 0.159924, 0.145858, 0.140251, 0.129344, 0.124747, 0.121392, 0.122189, 0.105263, 0.102381, 0.106813, 0.096318, 0.0937043, 0.091204, 0.0894519, 0.0878964, 0.0862095, 0.0855803, 0.0849171, 0.0836489, 0.0829794, 0.0824907, 0.0834282, 0.0835111, 0.0853289, 0.0863886, 0.0863928, 0.0851585, 0.0856683, 0.0861427, 0.0866306, 0.0871374, 0.115075, 0.114319, 0.114305, 0.11291, 0.113061, 0.114795, 0.116706, 0.119511, 0.116232, 0.112895, 0.119542, 0.12287, 0.12077, 0.124833, 0.127314, 0.130796, 0.132686, 0.137201, 0.147697, 0.15718, 0.162795, 0.18471, 0.183596, 0.192965, 0.219405, 0.225536, 0.229898, 0.250309, 0.270427, 0.286858, 0.312653, 0.358083, 0.373642, 0.396961, 0.438022, 0.461005, 0.500527, 0.535963, 0.60583, 0.656651, 0.768797, 0.896381, 0.967472, 1.10145, 1.2285, 1.38856, 1.56903, 1.83792, 2.06803, 2.39908, 2.63307, 3.33594, 3.97422, 4.95405, 5.75172, 6.78855, 8.5296, 11.091])
xs_exp_limits_2sigma = array('d', [2.53175, 2.1016, 1.75463, 1.43687, 1.23765, 1.12664, 0.959293, 0.892815, 0.747558, 0.659738, 0.578348, 0.558409, 0.464922, 0.395173, 0.365528, 0.331506, 0.28164, 0.257838, 0.248216, 0.234374, 0.22491, 0.201505, 0.190511, 0.178039, 0.156723, 0.143593, 0.137628, 0.129191, 0.12452, 0.118803, 0.107839, 0.105826, 0.0997498, 0.100805, 0.0917806, 0.0896668, 0.0904493, 0.086479, 0.0861143, 0.0848361, 0.0844479, 0.0834436, 0.0822767, 0.0803625, 0.0800279, 0.0796304, 0.0791918, 0.0787422, 0.0793683, 0.0804393, 0.0808357, 0.0820329, 0.082316, 0.0824234, 0.0829299, 0.0833685, 0.0837579, 0.0841474, 0.153255, 0.1523, 0.152526, 0.154098, 0.155161, 0.159437, 0.16478, 0.166113, 0.160603, 0.147728, 0.166195, 0.156104, 0.164727, 0.16867, 0.170802, 0.190386, 0.184061, 0.197981, 0.217495, 0.211825, 0.229181, 0.260367, 0.250289, 0.258427, 0.287519, 0.308474, 0.313343, 0.344164, 0.358396, 0.383106, 0.43041, 0.474079, 0.510187, 0.527106, 0.605349, 0.64428, 0.660652, 0.730273, 0.852435, 0.97668, 1.09802, 1.27351, 1.41505, 1.60902, 1.73244, 1.94363, 2.19627, 2.71725, 2.95092, 3.52582, 3.99589, 4.90795, 5.72009, 7.06083, 9.02632, 9.83512, 12.8639, 19.0564])

if syst:
  masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [18.3008, 11.5649, 11.7677, 9.50971, 5.75474, 3.42925, 2.18439, 1.58849, 1.36759, 1.27995, 1.23461, 1.21253, 1.28931, 1.3976, 1.40659, 1.27732, 1.05467, 0.901229, 0.86207, 0.868535, 0.82412, 0.762062, 0.674901, 0.581266, 0.452589, 0.34483, 0.274011, 0.221667, 0.187517, 0.172637, 0.16399, 0.15574, 0.146984, 0.140868, 0.139995, 0.137278, 0.134814, 0.136424, 0.136991, 0.136186, 0.134855, 0.135522, 0.132289, 0.130894, 0.128785, 0.125827, 0.122859, 0.119163, 0.117131, 0.114852, 0.113656, 0.110533, 0.108054, 0.11106, 0.109963, 0.110278, 0.109243, 0.109851])
  xs_exp_limits = array('d', [14.3962, 9.48121, 7.01623, 5.889505, 4.98805, 4.13835, 3.45536, 2.83787, 2.44881, 2.06521, 1.82667, 1.56513, 1.322575, 1.168415, 1.010515, 0.892765, 0.795551, 0.701526, 0.615877, 0.525111, 0.481777, 0.439153, 0.404622, 0.3637935, 0.332707, 0.316218, 0.277452, 0.2606355, 0.2418035, 0.22732, 0.209817, 0.19432, 0.186331, 0.1732935, 0.162105, 0.153349, 0.145746, 0.1325985, 0.1257205, 0.1224045, 0.1197185, 0.1137055, 0.110121, 0.0989737, 0.0979682, 0.0980667, 0.0929121, 0.09417125, 0.0930828, 0.0962552, 0.0942701, 0.0943524, 0.0933915, 0.0932595, 0.0937428, 0.09398685, 0.09477415, 0.0948558])

  masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma = array('d', [8.9985518, 6.63775918, 4.81502468, 4.14377026, 3.54122432, 2.9871638, 2.51639576, 2.11809738, 1.8022804, 1.53975739, 1.34238074, 1.18169388, 0.961569974, 0.824500845, 0.697681062, 0.615254049, 0.571021053, 0.493212244, 0.434195686, 0.380748535, 0.344831427, 0.317948398, 0.297038491, 0.264500933, 0.24637326, 0.231873083, 0.211051088, 0.190530412, 0.179535688, 0.168657746, 0.154156278, 0.144781327, 0.135489676, 0.129609411, 0.116458942, 0.111854662, 0.106294224, 0.0978443915, 0.0941698056, 0.0913827681, 0.0901804214, 0.0886447123, 0.0869331698, 0.0847175961, 0.084345169, 0.0838474541, 0.0823445771, 0.0828310808, 0.0827088846, 0.0843048782, 0.0842343092, 0.0846352529, 0.085039082, 0.0851051871, 0.085532287, 0.0859400931, 0.086677617, 0.0869341578, 0.1188046, 0.118622055, 0.119256937, 0.119325868, 0.119547517, 0.118128224, 0.122443941, 0.12248086, 0.127009191, 0.125307855, 0.129636, 0.128129496, 0.132553785, 0.135880398, 0.137912211, 0.150562878, 0.153598714, 0.164063118, 0.172189116, 0.180916793, 0.188953583, 0.201864482, 0.224943034, 0.233576952, 0.242215585, 0.257326898, 0.275974114, 0.295075668, 0.325820043, 0.34110525, 0.380492114, 0.418630905, 0.466825394, 0.473399241, 0.54389037, 0.571897946, 0.599064967, 0.681954856, 0.758478015, 0.829935116, 1.03577062, 1.13983601, 1.32711148, 1.44915504, 1.65861473, 1.88258326, 2.28681474, 2.5829258, 2.88404147, 3.46186756, 3.86774482, 4.65120032, 5.89278992, 6.81365822, 8.51481833, 10.2952022, 13.6066428, 21.1255751])
  xs_exp_limits_2sigma = array('d', [6.2384906, 4.6136001, 3.56797884, 2.94487123, 2.49369744, 2.29149658, 2.0227405, 1.67597926, 1.46596108, 1.14087259, 0.986171026, 0.861294636, 0.737742994, 0.613020949, 0.528427018, 0.465218681, 0.439056358, 0.374075086, 0.341712364, 0.312766259, 0.283834852, 0.25492908, 0.232133805, 0.216733243, 0.189329233, 0.179350957, 0.165598577, 0.15411408, 0.142296739, 0.132874339, 0.122611144, 0.113465982, 0.107897504, 0.105189115, 0.0936667272, 0.0910188802, 0.0919427662, 0.086117844, 0.0856950161, 0.0845813553, 0.0834409564, 0.08251144, 0.0814922564, 0.0807528685, 0.0801357586, 0.0799734935, 0.0791404572, 0.0792122877, 0.0790998573, 0.0803166179, 0.0813289368, 0.0814772329, 0.0819559996, 0.0815754289, 0.0822363279, 0.0831025257, 0.08307555, 0.0836659808, 0.160486902, 0.161657322, 0.163116604, 0.16527765, 0.167284464, 0.153224488, 0.162717981, 0.177978176, 0.166543282, 0.170430704, 0.17843507, 0.172093298, 0.186624179, 0.1895474, 0.191814643, 0.200174856, 0.201434534, 0.212090594, 0.224775597, 0.236114282, 0.247608556, 0.285076674, 0.286185074, 0.308364484, 0.331555065, 0.34346347, 0.363817525, 0.385072062, 0.437665684, 0.465494404, 0.521089286, 0.584034581, 0.616966789, 0.650308623, 0.711576951, 0.817124861, 0.852671003, 0.895752077, 1.03605311, 1.10644716, 1.44983268, 1.63600729, 1.80196633, 2.09519434, 2.290701, 2.72173738, 3.09551644, 3.62757278, 4.03188723, 4.39146368, 5.43068052, 6.49339586, 7.9789741, 9.59341964, 12.0898211, 15.1702026, 19.8711328, 29.9344244])

##
########################################################

massesTh = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])

xsAxi = array('d', [0.1849E+03,0.1236E+03,0.8473E+02,0.5937E+02,0.4235E+02,0.3069E+02,0.2257E+02,0.1680E+02,0.1263E+02,0.9577E+01,0.7317E+01,0.5641E+01,0.4374E+01,0.3411E+01,0.2672E+01,0.2103E+01,0.1658E+01,0.1312E+01,0.1041E+01,0.8284E+00,0.6610E+00,0.5294E+00,0.4250E+00,0.3417E+00,0.2752E+00,0.2220E+00,0.1792E+00,0.1449E+00,0.1172E+00,0.9487E-01,0.7686E-01,0.6219E-01,0.5033E-01,0.4074E-01,0.3298E-01,0.2671E-01,0.2165E-01,0.1755E-01,0.1422E-01,0.1152E-01,0.9322E-02,0.7539E-02,0.6092E-02,0.4917E-02,0.3965E-02,0.3193E-02,0.2568E-02,0.2062E-02,0.1653E-02,0.1323E-02,0.1057E-02,0.8442E-03,0.6728E-03,0.5349E-03,0.4242E-03,0.3357E-03,0.2644E-03,0.2077E-03,0.1627E-03,0.1271E-03,0.9891E-04,0.7686E-04,0.5951E-04,0.4592E-04,0.3530E-04,0.2704E-04,0.2059E-04,0.1562E-04,0.1180E-04,0.8882E-05,0.6657E-05,0.4968E-05,0.3693E-05,0.2734E-05,0.2016E-05,0.1481E-05,0.1084E-05,0.7903E-06,0.5744E-06,0.4160E-06,0.3007E-06])
xsDiquark = array('d', [0.5824E+02,0.4250E+02,0.3172E+02,0.2411E+02,0.1862E+02,0.1457E+02,0.1153E+02,0.9211E+01,0.7419E+01,0.6019E+01,0.4912E+01,0.4031E+01,0.3323E+01,0.2750E+01,0.2284E+01,0.1903E+01,0.1590E+01,0.1331E+01,0.1117E+01,0.9386E+00,0.7900E+00,0.6658E+00,0.5618E+00,0.4745E+00,0.4010E+00,0.3391E+00,0.2869E+00,0.2428E+00,0.2055E+00,0.1740E+00,0.1473E+00,0.1246E+00,0.1055E+00,0.8922E-01,0.7544E-01,0.6376E-01,0.5385E-01,0.4546E-01,0.3834E-01,0.3231E-01,0.2720E-01,0.2288E-01,0.1922E-01,0.1613E-01,0.1352E-01,0.1132E-01,0.9463E-02,0.7900E-02,0.6584E-02,0.5479E-02,0.4551E-02,0.3774E-02,0.3124E-02,0.2581E-02,0.2128E-02,0.1750E-02,0.1437E-02,0.1177E-02,0.9612E-03,0.7833E-03,0.6366E-03,0.5160E-03,0.4170E-03,0.3360E-03,0.2700E-03,0.2162E-03,0.1725E-03,0.1372E-03,0.1087E-03,0.8577E-04,0.6742E-04,0.5278E-04,0.4114E-04,0.3192E-04,0.2465E-04,0.1894E-04,0.1448E-04,0.1101E-04,0.8322E-05,0.6253E-05,0.4670E-05])
xsWprime = array('d', [0.8811E+01,0.6024E+01,0.4216E+01,0.3010E+01,0.2185E+01,0.1610E+01,0.1200E+01,0.9043E+00,0.6875E+00,0.5271E+00,0.4067E+00,0.3158E+00,0.2464E+00,0.1932E+00,0.1521E+00,0.1201E+00,0.9512E-01,0.7554E-01,0.6012E-01,0.4792E-01,0.3827E-01,0.3059E-01,0.2448E-01,0.1960E-01,0.1571E-01,0.1259E-01,0.1009E-01,0.8090E-02,0.6483E-02,0.5193E-02,0.4158E-02,0.3327E-02,0.2660E-02,0.2125E-02,0.1695E-02,0.1351E-02,0.1075E-02,0.8546E-03,0.6781E-03,0.5372E-03,0.4248E-03,0.3353E-03,0.2642E-03,0.2077E-03,0.1629E-03,0.1275E-03,0.9957E-04,0.7757E-04,0.6027E-04,0.4670E-04,0.3610E-04,0.2783E-04,0.2140E-04,0.1641E-04,0.1254E-04,0.9561E-05,0.7269E-05,0.5510E-05,0.4167E-05,0.3143E-05,0.2364E-05,0.1774E-05,0.1329E-05,0.9931E-06,0.7411E-06,0.5523E-06,0.4108E-06,0.3055E-06,0.2271E-06,0.1687E-06,0.1254E-06,0.9327E-07,0.6945E-07,0.5177E-07,0.3863E-07,0.2888E-07,0.2162E-07,0.1622E-07,0.1218E-07,0.9156E-08,0.6893E-08])
xsZprime = array('d', [0.5027E+01,0.3398E+01,0.2353E+01,0.1663E+01,0.1196E+01,0.8729E+00,0.6450E+00,0.4822E+00,0.3638E+00,0.2769E+00,0.2123E+00,0.1639E+00,0.1272E+00,0.9933E-01,0.7789E-01,0.6134E-01,0.4848E-01,0.3845E-01,0.3059E-01,0.2440E-01,0.1952E-01,0.1564E-01,0.1256E-01,0.1010E-01,0.8142E-02,0.6570E-02,0.5307E-02,0.4292E-02,0.3473E-02,0.2813E-02,0.2280E-02,0.1848E-02,0.1499E-02,0.1216E-02,0.9864E-03,0.8002E-03,0.6490E-03,0.5262E-03,0.4264E-03,0.3453E-03,0.2795E-03,0.2260E-03,0.1826E-03,0.1474E-03,0.1188E-03,0.9566E-04,0.7690E-04,0.6173E-04,0.4947E-04,0.3957E-04,0.3159E-04,0.2516E-04,0.2001E-04,0.1587E-04,0.1255E-04,0.9906E-05,0.7795E-05,0.6116E-05,0.4785E-05,0.3731E-05,0.2900E-05,0.2247E-05,0.1734E-05,0.1334E-05,0.1022E-05,0.7804E-06,0.5932E-06,0.4492E-06,0.3388E-06,0.2544E-06,0.1903E-06,0.1417E-06,0.1051E-06,0.7764E-07,0.5711E-07,0.4186E-07,0.3055E-07,0.2223E-07,0.1612E-07,0.1164E-07,0.8394E-08])

graph_xsAxi = TGraph(len(massesTh),massesTh,xsAxi)
graph_xsAxi.SetLineWidth(3)
graph_xsAxi.SetLineStyle(3)
graph_xsAxi.SetLineColor(63)

graph_xsDiquark = TGraph(len(massesTh),massesTh,xsDiquark)
graph_xsDiquark.SetLineWidth(3)
graph_xsDiquark.SetLineStyle(9)
graph_xsDiquark.SetLineColor(8)

graph_xsWprime = TGraph(len(massesTh),massesTh,xsWprime)
graph_xsWprime.SetLineWidth(3)
graph_xsWprime.SetLineStyle(7)
graph_xsWprime.SetLineColor(46)

graph_xsZprime = TGraph(len(massesTh),massesTh,xsZprime)
graph_xsZprime.SetLineWidth(3)
graph_xsZprime.SetLineStyle(5)
graph_xsZprime.SetLineColor(38)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qq resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-02,1e+03)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsAxi.Draw("L")
graph_xsDiquark.Draw("L")
graph_xsWprime.Draw("L")
graph_xsZprime.Draw("L")

legend = TLegend(.60,.55,.90,.70)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legendTh = TLegend(.60,.72,.90,.88)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.03)
legendTh.AddEntry(graph_xsAxi,"Axigluon/coloron","l")
legendTh.AddEntry(graph_xsDiquark,"Scalar diquark","l")
legendTh.AddEntry(graph_xsWprime,"W' SSM","l")
legendTh.AddEntry(graph_xsZprime,"Z' SSM","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "41.8 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qq' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_41p8_invpb.eps')
